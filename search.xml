<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>大数据模块一学习路径与计划</title>
      <link href="/2025/05/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9D%97%E4%B8%80%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84%E4%B8%8E%E8%AE%A1%E5%88%92/"/>
      <url>/2025/05/16/%E5%A4%A7%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9D%97%E4%B8%80%E5%AD%A6%E4%B9%A0%E8%B7%AF%E5%BE%84%E4%B8%8E%E8%AE%A1%E5%88%92/</url>
      
        <content type="html"><![CDATA[<h3 id="学习路径与计划"><a href="#学习路径与计划" class="headerlink" title="学习路径与计划"></a>学习路径与计划</h3><h4 id="第一阶段：基础准备（1-2周）"><a href="#第一阶段：基础准备（1-2周）" class="headerlink" title="第一阶段：基础准备（1-2周）"></a>第一阶段：基础准备（1-2周）</h4><ul><li><p><strong>Linux基础</strong>：</p><ul><li>熟悉Linux命令行操作，包括文件管理、用户权限管理、网络配置等。</li><li>学习如何生成SSH密钥对，并实现免密登录，修改主机名，关闭防火墙。</li></ul></li><li><p><strong>数据库基础知识</strong>：</p><ul><li>掌握SQL语言基础，包括数据表的创建、删除、修改及查询操作。</li><li>学习MySQL的基本使用，包括用户管理和权限设置。</li></ul></li></ul><h4 id="第二阶段：环境搭建（3-4周）"><a href="#第二阶段：环境搭建（3-4周）" class="headerlink" title="第二阶段：环境搭建（3-4周）"></a>第二阶段：环境搭建（3-4周）</h4><ul><li><p><strong>JDK安装与配置</strong>：</p><ul><li>在Linux环境下完成JDK的安装和环境变量配置。</li><li>使用<code>java -version</code> 和 <code>javac</code> 命令验证安装成功。</li></ul></li><li><p><strong>Zookeeper集群安装配置</strong>：</p><ul><li>按照文档步骤，在master节点解压并配置Zookeeper，确保集群正常运行。</li><li>修改myid文件，配置各节点的ID。</li><li>启动Zookeeper并在各个节点查看状态。</li></ul></li><li><p><strong>Hadoop完全分布式集群搭建</strong>：</p><ul><li>解压并配置Hadoop，包括namenode初始化、集群启动等过程。</li><li>配置Hadoop的core-site.xml、hdfs-site.xml、yarn-site.xml文件，确保集群正常运行。</li><li>初始化Hadoop namenode，启动Hadoop集群并检查各节点进程。</li></ul></li><li><p><strong>Kafka完全分布式集群搭建</strong>：</p><ul><li>配置Kafka集群，确保其能与Zookeeper集成工作。</li><li>测试Kafka的消息发送与接收功能。</li><li>创建Topic，分区数为2，副本数为2，并测试创建成果。</li></ul></li></ul><h4 id="第三阶段：高级组件配置（5-6周）"><a href="#第三阶段：高级组件配置（5-6周）" class="headerlink" title="第三阶段：高级组件配置（5-6周）"></a>第三阶段：高级组件配置（5-6周）</h4><ul><li><p><strong>Hive安装配置</strong>：</p><ul><li>将MySQL作为元数据库，并配置Hive以支持数据分析任务。</li><li>初始化Hive元数据库，并测试Hive的运行情况。</li><li>设置Hive环境变量，并使环境变量生效，执行命令<code>hive --version</code>查看版本信息。</li></ul></li><li><p><strong>Flume安装配置</strong>：</p><ul><li>配置日志收集系统，将其与Hadoop集成，用于实时数据处理。</li><li>启动Flume并查看其版本信息，确保配置正确。</li><li>使用Flume传输Hadoop日志，查看HDFS中生成的内容。</li></ul></li><li><p><strong>Flink on Yarn安装配置</strong>：</p><ul><li>从Master中的<code>/opt/software</code>目录下将文件<code>flink-1.14.0-bin-scala_2.12.tgz</code>解压到路径<code>/opt/module</code>中（如果路径不存在，则需新建）。</li><li>修改容器中<code>/etc/profile</code>文件，设置Flink环境变量，并使环境变量生效。在容器中<code>/opt</code>目录下运行命令<code>flink --version</code>。</li><li>开启Hadoop集群，在YARN上以Per Job模式运行示例程序，如WordCount，并记录结果。</li></ul></li></ul><h4 id="第四阶段：数据库管理与维护（7-8周）"><a href="#第四阶段：数据库管理与维护（7-8周）" class="headerlink" title="第四阶段：数据库管理与维护（7-8周）"></a>第四阶段：数据库管理与维护（7-8周）</h4><ul><li><p><strong>数据库配置维护</strong>：</p><ul><li>创建用户并分配权限。</li><li>数据库的导入导出操作。</li><li>使用SQL语句进行复杂的数据分析和报表生成。</li></ul></li><li><p><strong>数据表维护</strong>：</p><ul><li>对已有的数据表进行增删改查操作。</li><li>维护数据表结构，添加新字段或修改现有字段。</li></ul></li></ul><h4 id="第五阶段：项目实践（9-10周）"><a href="#第五阶段：项目实践（9-10周）" class="headerlink" title="第五阶段：项目实践（9-10周）"></a>第五阶段：项目实践（9-10周）</h4><ul><li><strong>基于业务需求的数据分析</strong>：<ul><li>根据实际业务需求，编写SQL查询语句，如统计特定时间段内温差超过一定阈值的城市。</li><li>分析酒店评论数据，计算评分，统计商圈内的酒店总数。</li></ul></li></ul><h4 id="第六阶段：持续学习与优化（长期）"><a href="#第六阶段：持续学习与优化（长期）" class="headerlink" title="第六阶段：持续学习与优化（长期）"></a>第六阶段：持续学习与优化（长期）</h4><ul><li><p><strong>深入学习各组件原理</strong>：</p><ul><li>如Hadoop的工作机制、Spark的RDD模型、Flink的流处理机制等。</li><li>学习如何监控集群状态，识别并解决性能瓶颈和常见问题。</li></ul></li><li><p><strong>关注行业动态和技术更新</strong>：</p><ul><li>定期查阅相关技术博客、参加社区讨论，保持对最新技术和最佳实践的关注。</li><li>实践最新的大数据处理技术和工具，如Flink、Kubernetes等。</li></ul></li></ul><p>通过上述学习路径，你可以逐步建立起对大数据技术栈的理解，并能够独立完成从平台搭建到数据分析再到结果可视化的整个流程。每个阶段都应结合实际动手练习来加深理解和记忆，确保能够独立完成相应的任务。同时，保持对新技术的好奇心和探索精神，不断学习和进步。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hive的安装配置</title>
      <link href="/2025/05/16/hive%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/05/16/hive%E7%9A%84%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<p>以下是Hive的安装步骤总结，分为主要流程和详细步骤：</p><hr><h3 id="一、安装前提条件"><a href="#一、安装前提条件" class="headerlink" title="一、安装前提条件"></a><strong>一、安装前提条件</strong></h3><ol><li><strong>Java环境</strong>：确保已安装JDK 1.8或更高版本。</li><li><strong>Hadoop集群</strong>：Hive依赖Hadoop，需提前安装并启动HDFS和YARN。</li><li><strong>数据库</strong>（可选）：若需远程元数据存储，需安装MySQL&#x2F;PostgreSQL等（我们默认安装使用MySQL）。</li></ol><hr><h3 id="二、详细安装步骤"><a href="#二、详细安装步骤" class="headerlink" title="二、详细安装步骤"></a><strong>二、详细安装步骤</strong></h3><h4 id="1-下载Hive安装包"><a href="#1-下载Hive安装包" class="headerlink" title="1. 下载Hive安装包"></a><strong>1. 下载Hive安装包</strong></h4><ul><li>从官网或镜像站下载Hive（如<code>apache-hive-3.x.x-bin.tar.gz</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://downloads.apache.org/hive/hive-3.1.3/apache-hive-3.1.3-bin.tar.gz</span><br></pre></td></tr></table></figure></li></ul><h4 id="2-解压并配置环境变量"><a href="#2-解压并配置环境变量" class="headerlink" title="2. 解压并配置环境变量"></a><strong>2. 解压并配置环境变量</strong></h4><ul><li>解压到目标目录：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf apache-hive-3.1.3-bin.tar.gz -C /opt/</span><br><span class="line"><span class="built_in">mv</span> /opt/apache-hive-3.1.3-bin /opt/hive</span><br></pre></td></tr></table></figure></li><li>配置环境变量（<code>~/.bashrc</code>或<code>/etc/profile</code>）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> HIVE_HOME=/opt/hive</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$HIVE_HOME</span>/bin</span><br></pre></td></tr></table></figure></li><li>使配置生效：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></li></ul><h4 id="3-配置元数据库（以MySQL为例）"><a href="#3-配置元数据库（以MySQL为例）" class="headerlink" title="3. 配置元数据库（以MySQL为例）"></a><strong>3. 配置元数据库（以MySQL为例）</strong></h4><ul><li><p><strong>安装MySQL</strong>：安装并启动MySQL服务。</p></li><li><p><strong>创建Hive元数据库和用户</strong>：（<code>我们默认用root用户，则一下内容可以选择配置，请思考哪些可以不用配置</code>）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE hive;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;hive&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;hive_password&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> metastore.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;hive&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li><li><p><strong>将MySQL驱动包复制到Hive的<code>lib</code>目录</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> mysql-connector-java-5.1.34.jar <span class="variable">$HIVE_HOME</span>/lib/</span><br></pre></td></tr></table></figure></li></ul><h4 id="4-配置Hive配置文件"><a href="#4-配置Hive配置文件" class="headerlink" title="4. 配置Hive配置文件"></a><strong>4. 配置Hive配置文件</strong></h4><ul><li>进入<code>$HIVE_HOME/conf</code>目录，创建或修改以下文件：<ul><li><p><strong>hive-site.xml</strong>（核心配置）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 元数据库连接 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://mysql-host:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root_password<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- HDFS存储路径，默认hive存储位置，可不配置，如有存储目录要求，则如下配置--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.warehouse.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/user/hive/warehouse<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="5-初始化元数据库"><a href="#5-初始化元数据库" class="headerlink" title="5. 初始化元数据库"></a><strong>5. 初始化元数据库</strong></h4><ul><li>运行初始化命令：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">schematool -dbType mysql -initSchema</span><br></pre></td></tr></table></figure></li></ul><h4 id="6-启动Hadoop集群"><a href="#6-启动Hadoop集群" class="headerlink" title="6. 启动Hadoop集群"></a><strong>6. 启动Hadoop集群</strong></h4><ul><li>确保HDFS和YARN已启动：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-dfs.sh &amp;&amp; start-yarn.sh</span><br></pre></td></tr></table></figure></li></ul><h4 id="7-启动Hive"><a href="#7-启动Hive" class="headerlink" title="7. 启动Hive"></a><strong>7. 启动Hive</strong></h4><ul><li><strong>启动元数据服务</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hive --service metastore </span><br><span class="line"><span class="comment"># 必须采用下面的后台启动命令，需要设置日志文件路径，如下面的logs:</span></span><br><span class="line"><span class="built_in">nohup</span> hive --service metastore &gt;&gt;logs/metastore.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure></li><li><strong>命令行启动</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hive  <span class="comment"># 直接进入Hive CLI</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="8-验证安装"><a href="#8-验证安装" class="headerlink" title="8. 验证安装"></a><strong>8. 验证安装</strong></h4><ul><li>执行简单HiveQL命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> test (id <span class="type">INT</span>, name STRING);</span><br><span class="line"><span class="keyword">SHOW</span> TABLES;</span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="三、常见问题"><a href="#三、常见问题" class="headerlink" title="三、常见问题"></a><strong>三、常见问题</strong></h3><ol><li><strong>权限问题</strong>：确保HDFS目录<code>/user/hive/warehouse</code>有读写权限。</li><li><strong>驱动缺失</strong>：检查MySQL驱动是否在<code>$HIVE_HOME/lib</code>目录。</li><li><strong>端口冲突</strong>：确认MySQL和Hive服务端口未被占用。</li></ol><hr><h3 id="四、扩展配置（可选）"><a href="#四、扩展配置（可选）" class="headerlink" title="四、扩展配置（可选）"></a><strong>四、扩展配置（可选）</strong></h3><ul><li><strong>Hive on Spark</strong>：配置Spark作为执行引擎。</li><li><strong>高可用模式</strong>：配置多节点元数据服务。</li></ul><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hadoop分布式存储系统前的环境设置准备</title>
      <link href="/2025/05/16/%E6%90%AD%E5%BB%BAHadoop%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E5%89%8D%E7%9A%84%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE%E5%87%86%E5%A4%87/"/>
      <url>/2025/05/16/%E6%90%AD%E5%BB%BAHadoop%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E5%89%8D%E7%9A%84%E7%8E%AF%E5%A2%83%E8%AE%BE%E7%BD%AE%E5%87%86%E5%A4%87/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建Hadoop分布式存储系统前的环境设置准备"><a href="#搭建Hadoop分布式存储系统前的环境设置准备" class="headerlink" title="搭建Hadoop分布式存储系统前的环境设置准备"></a>搭建Hadoop分布式存储系统前的环境设置准备</h1><p>在配置Hadoop之前，需要在三台虚拟机上完成以下环境设置准备工作：</p><h2 id="1-系统基本配置"><a href="#1-系统基本配置" class="headerlink" title="1. 系统基本配置"></a>1. 系统基本配置</h2><ul><li><p><strong>主机名设置</strong>：为每台虚拟机设置唯一的主机名</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname master  <span class="comment"># 主节点</span></span><br><span class="line">hostnamectl set-hostname slave1  <span class="comment"># 从节点1</span></span><br><span class="line">hostnamectl set-hostname slave2  <span class="comment"># 从节点2</span></span><br></pre></td></tr></table></figure></li><li><p><strong>hosts文件配置</strong>：在所有节点上配置IP与主机名的映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"><span class="comment"># 添加如下内容（根据实际IP修改）：</span></span><br><span class="line">192.168.1.100 master</span><br><span class="line">192.168.1.101 slave1</span><br><span class="line">192.168.1.102 slave2</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-网络配置"><a href="#2-网络配置" class="headerlink" title="2. 网络配置"></a>2. 网络配置</h2><ul><li><p><strong>关闭防火墙</strong>（或配置相应规则）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure></li><li><p><strong>禁用SELinux</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br><span class="line">sed -i <span class="string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/config</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-SSH无密码登录配置"><a href="#3-SSH无密码登录配置" class="headerlink" title="3. SSH无密码登录配置"></a>3. SSH无密码登录配置</h2><ul><li><p><strong>安装SSH服务（一般已经默认安装）</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y openssh-server openssh-clients</span><br></pre></td></tr></table></figure></li><li><p><strong>生成SSH密钥对</strong>（在所有节点上执行）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure></li><li><p><strong>配置主节点到从节点的无密码登录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id master</span><br><span class="line">ssh-copy-id slave1</span><br><span class="line">ssh-copy-id slave2</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-Java环境安装"><a href="#4-Java环境安装" class="headerlink" title="4. Java环境安装"></a>4. Java环境安装</h2><h3 id="解压安装步骤（三台虚拟机要同样配置）"><a href="#解压安装步骤（三台虚拟机要同样配置）" class="headerlink" title="解压安装步骤（三台虚拟机要同样配置）"></a>解压安装步骤（三台虚拟机要同样配置）</h3><ol><li><p><strong>上传压缩包到服务器</strong></p><ul><li>将下载的 <code>jdk-8uXXX-linux-x64.tar.gz</code> 文件上传到 Linux 服务器的指定目录，例如 <code>/usr/local/src</code>。</li></ul></li><li><p><strong>解压文件</strong><br>打开终端，执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/local/src</span><br><span class="line">tar -zxvf jdk-8uXXX-linux-x64.tar.gz -C /usr/local/</span><br></pre></td></tr></table></figure><ul><li><code>-z</code> 表示解压 <code>.gz</code> 文件。</li><li><code>-x</code> 表示解压缩。</li><li><code>-v</code> 表示显示解压过程。</li><li><code>-f</code> 指定文件名。</li><li><code>-C</code> 指定解压目标路径。</li></ul></li><li><p><strong>配置环境变量</strong><br>编辑 <code>/etc/profile</code> 文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> nano /etc/profile</span><br></pre></td></tr></table></figure><p>在文件末尾添加以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/jdk1.8.0_XXX</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure><ul><li>替换 <code>jdk1.8.0_XXX</code> 为实际解压后的文件夹名称。</li></ul></li><li><p><strong>使配置生效</strong><br>执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></li><li><p><strong>验证安装</strong><br>运行以下命令检查 Java 版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>输出类似以下内容，表示安装成功：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_XXX&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_XXX-bXX)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build XX.XXX-bXX, mixed mode)</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="5-时间同步"><a href="#5-时间同步" class="headerlink" title="5. 时间同步"></a>5. 时间同步</h2><ul><li><strong>安装NTP服务并同步时间</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ntp</span><br><span class="line">systemctl start ntpd</span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">ntpdate pool.ntp.org</span><br></pre></td></tr></table></figure></li></ul><p>完成以上环境设置后，即可开始Hadoop的安装和配置工作。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kafka安装与集群搭建测试指南</title>
      <link href="/2025/05/16/kafka%E5%AE%89%E8%A3%85%E4%B8%8E%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97/"/>
      <url>/2025/05/16/kafka%E5%AE%89%E8%A3%85%E4%B8%8E%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p> <strong>Kafka 集群环境搭建的简明步骤总结</strong>（假设已安装 Java 环境）：</p><hr><h3 id="1-解压文件"><a href="#1-解压文件" class="headerlink" title="1. 解压文件"></a><strong>1. 解压文件</strong></h3><p>下载 Kafka 并解压到指定目录（以 3.7.0 版本为例）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line">wget https://downloads.apache.org/kafka/3.7.0/kafka_2.12-3.7.0.tgz</span><br><span class="line">tar -xzf kafka_2.12-3.7.0.tgz</span><br><span class="line"><span class="built_in">mv</span> kafka_2.12-3.7.0 kafka</span><br><span class="line"><span class="built_in">cd</span> kafka</span><br></pre></td></tr></table></figure><hr><h3 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a><strong>2. 修改配置文件</strong></h3><h4 id="集群版配置："><a href="#集群版配置：" class="headerlink" title="集群版配置："></a><strong>集群版配置</strong>：</h4><ul><li><strong>修改 <code>config/server.properties</code></strong>：<figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">broker.id</span>=<span class="string">1            # 集群中每台机器需不同（如 0,1,2）</span></span><br><span class="line"><span class="attr">listeners</span>=<span class="string">PLAINTEXT://当前机器IP:9092  # 绑定本机 IP 或域名</span></span><br><span class="line"><span class="attr">log.dirs</span>=<span class="string">/data/kafka-logs  # 生产环境建议修改存储路径（非 /tmp）</span></span><br><span class="line"><span class="attr">zookeeper.connect</span>=<span class="string">zk1:2181,zk2:2181,zk3:2181  # Zookeeper 集群地址</span></span><br></pre></td></tr></table></figure></li></ul><hr><h3 id="3-分发与启动服务"><a href="#3-分发与启动服务" class="headerlink" title="3. 分发与启动服务"></a><strong>3. 分发与启动服务</strong></h3><ul><li><p><strong>集群版</strong>：</p></li><li><p><strong>分发安装包</strong>到其他节点（如使用 <code>scp</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /opt/kafka node2:/opt/</span><br><span class="line">scp -r /opt/kafka node3:/opt/</span><br></pre></td></tr></table></figure></li><li><p><strong>启动zookeeper</strong></p></li><li><p><strong>启动 Kafka</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-start.sh -daemon config/server.properties  <span class="comment"># 后台运行</span></span><br></pre></td></tr></table></figure></li><li><p><strong>每台节点</strong>重复启动步骤，确保：</p><ol><li><code>broker.id</code> 唯一。</li><li><code>zookeeper.connect</code> 指向同一 Zookeeper 集群。</li></ol></li></ul><hr><h3 id="4-创建主题（Topic）"><a href="#4-创建主题（Topic）" class="headerlink" title="4. 创建主题（Topic）"></a><strong>4. 创建主题（Topic）</strong></h3><p>创建一个名为 <code>test</code> 的主题（单机副本因子为 1，集群可设为副本数 ≤ Broker 数量）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create \</span><br><span class="line">  --topic <span class="built_in">test</span> \</span><br><span class="line">  --zookeeper node1:2181 \  <span class="comment"># 集群中可指定任意 Broker IP:Port</span></span><br><span class="line">  --partitions 3 \                     <span class="comment"># 分区数（按需调整）</span></span><br><span class="line">  --replication-factor 1               <span class="comment"># 副本数（集群建议 ≥ 2）</span></span><br></pre></td></tr></table></figure><hr><h3 id="5-测试生产与消费"><a href="#5-测试生产与消费" class="headerlink" title="5. 测试生产与消费"></a><strong>5. 测试生产与消费</strong></h3><ul><li><p><strong>生产者发送消息</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh \</span><br><span class="line">  --broker-list node2:9092 \  <span class="comment"># 集群填写多个地址，如 node1:9092,node2:9092</span></span><br><span class="line">  --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><p>输入任意消息（如 <code>Hello Kafka</code>）后按回车发送。</p></li><li><p><strong>消费者接收消息</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh \</span><br><span class="line">  --bootstrap-server node2:9092 \</span><br><span class="line">  --topic <span class="built_in">test</span> \</span><br><span class="line">  --from-beginning  <span class="comment"># 从最早的消息开始消费</span></span><br></pre></td></tr></table></figure><p>若看到发送的消息，则功能正常。</p></li></ul><hr><h3 id="关键注意事项"><a href="#关键注意事项" class="headerlink" title="关键注意事项"></a><strong>关键注意事项</strong></h3><ol><li><strong>数据持久化</strong>：生产环境务必修改 <code>log.dirs</code> 路径，避免 <code>/tmp</code> 目录数据丢失。</li><li><strong>防火墙</strong>：确保开放端口（Kafka: 9092, Zookeeper: 2181）。</li><li><strong>集群部署</strong>：<ul><li>Zookeeper 需独立集群（至少 3 节点）。</li><li>Kafka 集群节点数建议 ≥ 3，副本因子建议 ≥ 2。</li></ul></li><li><strong>服务自启动</strong>：可通过 <code>systemd</code> 配置（参考 <code>/etc/systemd/system/kafka.service</code>）。</li></ol><hr><p>通过以上步骤，即可完成 Kafka 的快速部署与基础验证。实际生产环境中需根据业务需求调整分区、副本、网络等参数。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zookeeper安装与集群搭建指南</title>
      <link href="/2025/05/12/Zookeeper%E5%AE%89%E8%A3%85%E4%B8%8E%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
      <url>/2025/05/12/Zookeeper%E5%AE%89%E8%A3%85%E4%B8%8E%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h3 id="通俗介绍Zookeeper"><a href="#通俗介绍Zookeeper" class="headerlink" title="通俗介绍Zookeeper"></a>通俗介绍Zookeeper</h3><p>Zookeeper 可以理解为一个<strong>分布式系统的“协调员”</strong>，专门解决分布式系统中多个节点协同工作的问题。比如：</p><ul><li><strong>配置管理</strong>：像公告板一样，让所有节点都能实时读取最新配置。</li><li><strong>分布式锁</strong>：防止多个节点同时操作同一资源，避免混乱。</li><li><strong>服务注册与发现</strong>：帮助节点找到彼此，比如微服务中自动发现可用的服务地址。</li><li><strong>选主（Leader选举）</strong>：在集群中自动选一个“老大”，避免群龙无首。</li></ul><p>它通过简单的目录树结构（类似文件系统）存储数据，并确保所有节点的数据一致，即使部分节点故障也能继续工作。</p><hr><h3 id="三台虚拟机安装Zookeeper集群（步骤详解）"><a href="#三台虚拟机安装Zookeeper集群（步骤详解）" class="headerlink" title="三台虚拟机安装Zookeeper集群（步骤详解）"></a>三台虚拟机安装Zookeeper集群（步骤详解）</h3><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><ul><li><strong>三台虚拟机</strong>：IP 假设为 <code>192.168.1.101</code>、<code>192.168.1.102</code>、<code>192.168.1.103</code>。</li><li><strong>确保互通</strong>：关闭防火墙或开放端口 <code>2181</code>（客户端通信）、<code>2888</code>（数据同步）、<code>3888</code>（选举通信）。</li><li><strong>安装Java</strong>：所有机器安装JDK 8+（Zookeeper依赖Java）。</li></ul><hr><h4 id="安装步骤（每台机器执行）"><a href="#安装步骤（每台机器执行）" class="headerlink" title="安装步骤（每台机器执行）"></a>安装步骤（每台机器执行）</h4><h5 id="1-下载并解压Zookeeper"><a href="#1-下载并解压Zookeeper" class="headerlink" title="1. 下载并解压Zookeeper"></a>1. 下载并解压Zookeeper</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入安装目录（例如/opt）</span></span><br><span class="line"><span class="built_in">cd</span> /opt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载（以3.7.1版本为例）</span></span><br><span class="line">wget https://downloads.apache.org/zookeeper/zookeeper-3.7.1/apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf apache-zookeeper-3.7.1-bin.tar.gz</span><br><span class="line"><span class="built_in">mv</span> apache-zookeeper-3.7.1-bin zookeeper</span><br></pre></td></tr></table></figure><h5 id="2-创建数据目录"><a href="#2-创建数据目录" class="headerlink" title="2. 创建数据目录"></a>2. 创建数据目录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /opt/zookeeper/data</span><br></pre></td></tr></table></figure><h5 id="3-配置文件-zoo-cfg"><a href="#3-配置文件-zoo-cfg" class="headerlink" title="3. 配置文件 zoo.cfg"></a>3. 配置文件 <code>zoo.cfg</code></h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/zookeeper/conf</span><br><span class="line"><span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span><br><span class="line">vim zoo.cfg</span><br></pre></td></tr></table></figure><p><strong>修改以下内容</strong>：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">dataDir</span>=/opt/zookeeper/data  <span class="comment"># 数据目录</span></span><br><span class="line"><span class="attr">clientPort</span>=<span class="number">2181</span>              <span class="comment"># 客户端连接端口</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集群配置（三台机器配置相同）</span></span><br><span class="line"><span class="attr">server.1</span>=<span class="number">192.168</span>.<span class="number">1.101</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line"><span class="attr">server.2</span>=<span class="number">192.168</span>.<span class="number">1.102</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br><span class="line"><span class="attr">server.3</span>=<span class="number">192.168</span>.<span class="number">1.103</span>:<span class="number">2888</span>:<span class="number">3888</span></span><br></pre></td></tr></table></figure><h5 id="4-创建-myid-文件（每台机器不同）"><a href="#4-创建-myid-文件（每台机器不同）" class="headerlink" title="4. 创建 myid 文件（每台机器不同）"></a>4. 创建 <code>myid</code> 文件（每台机器不同）</h5><ul><li><strong>192.168.1.101</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /opt/zookeeper/data/myid</span><br></pre></td></tr></table></figure></li><li><strong>192.168.1.102</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;2&quot;</span> &gt; /opt/zookeeper/data/myid</span><br></pre></td></tr></table></figure></li><li><strong>192.168.1.103</strong>：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;3&quot;</span> &gt; /opt/zookeeper/data/myid</span><br></pre></td></tr></table></figure></li></ul><h5 id="5-启动Zookeeper服务"><a href="#5-启动Zookeeper服务" class="headerlink" title="5. 启动Zookeeper服务"></a>5. 启动Zookeeper服务</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入Zookeeper的bin目录</span></span><br><span class="line"><span class="built_in">cd</span> /opt/zookeeper/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">./zkServer.sh start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看状态（正常会显示Mode: leader或follower）</span></span><br><span class="line">./zkServer.sh status</span><br></pre></td></tr></table></figure><hr><h4 id="验证集群"><a href="#验证集群" class="headerlink" title="验证集群"></a>验证集群</h4><ul><li>在三台机器上分别执行 <code>./zkServer.sh status</code>，正常情况下：<ul><li>一台显示 <code>Mode: leader</code>（主节点）。</li><li>另外两台显示 <code>Mode: follower</code>（从节点）。</li></ul></li><li>若状态异常，检查日志 <code>/opt/zookeeper/logs/zookeeper.out</code>。</li></ul><hr><h4 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h4><ol><li><strong>节点无法启动</strong>：<ul><li>版本过高，与jiava版本不兼容。</li><li>检查 <code>myid</code> 是否与 <code>zoo.cfg</code> 中的 <code>server.x</code> 匹配。</li><li>确认端口 <code>2181,2888,3888</code> 是否开放。</li></ul></li><li><strong>集群不选举</strong>：<ul><li>确保机器时间同步（使用 <code>ntpdate</code> 同步时间）。</li><li>检查防火墙或网络是否阻断通信。</li></ul></li></ol><hr><p>通过以上步骤，一个Zookeeper集群就搭建完成了！它将成为你分布式系统的可靠“协调员”。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop组件角色与配置文件对应关系详解</title>
      <link href="/2025/04/23/Hadoop%E7%BB%84%E4%BB%B6%E8%A7%92%E8%89%B2%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB%E8%AF%A6%E8%A7%A3/"/>
      <url>/2025/04/23/Hadoop%E7%BB%84%E4%BB%B6%E8%A7%92%E8%89%B2%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%AF%B9%E5%BA%94%E5%85%B3%E7%B3%BB%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="Hadoop组件角色与配置文件对应关系详解"><a href="#Hadoop组件角色与配置文件对应关系详解" class="headerlink" title="Hadoop组件角色与配置文件对应关系详解"></a>Hadoop组件角色与配置文件对应关系详解</h1><p>根据前面的通俗比喻，我将详细解释Hadoop三大组件的配置文件如何与其角色对应。</p><h2 id="一、hadoop环境配置文件：hadoop-env-sh"><a href="#一、hadoop环境配置文件：hadoop-env-sh" class="headerlink" title="一、hadoop环境配置文件：hadoop-env.sh"></a>一、hadoop环境配置文件：<code>hadoop-env.sh</code></h2><p><strong>NameNode（确定谁是namenode)配置项</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/opt/server/jdk1.8</span><br><span class="line">export HADOOP_HOME=/opt/server/hadoop</span><br><span class="line"></span><br><span class="line">export HDFS_NAMENODE_USER=root</span><br><span class="line">export HDFS_DATANODE_USER=root</span><br><span class="line">export HDFS_SECONDARYNAMENODE_USER=root</span><br><span class="line">export YARN_RESOURCEMANAGER_USER=root</span><br><span class="line">export YARN_NODEMANAGER_USER=root</span><br><span class="line">export YARN_PROXYSERVER_USER=root</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、工人配置文件：workers"><a href="#二、工人配置文件：workers" class="headerlink" title="二、工人配置文件：workers"></a>二、工人配置文件：<code>workers</code></h2><p><strong>确定谁运行datanode以及nodemanager</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">master</span><br><span class="line">slave1</span><br><span class="line">slave2</span><br></pre></td></tr></table></figure><h2 id="三、全局协调配置文件：core-site-xml"><a href="#三、全局协调配置文件：core-site-xml" class="headerlink" title="三、全局协调配置文件：core-site.xml"></a>三、全局协调配置文件：<code>core-site.xml</code></h2><p><strong>NameNode（确定谁是namenode)配置项</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="四、HDFS（仓库部门）配置文件"><a href="#四、HDFS（仓库部门）配置文件" class="headerlink" title="四、HDFS（仓库部门）配置文件"></a>四、HDFS（仓库部门）配置文件</h2><h3 id="1-核心配置文件：hdfs-site-xml"><a href="#1-核心配置文件：hdfs-site-xml" class="headerlink" title="1. 核心配置文件：hdfs-site.xml"></a>1. 核心配置文件：<code>hdfs-site.xml</code></h3><p><strong>NameNode（元数据账本存放位置）配置项</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 仓库账本存放位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/hadoop/namenode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>DataNode（仓库）配置项</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 工人存放货物的仓库位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>/opt/hadoop/datanode<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 每件货物的备份数量 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>3<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Secondary NameNode（仓库总管助理）配置项</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产总管助理的工作地点 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>slave1:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="五、YARN（生产管理部）配置文件"><a href="#五、YARN（生产管理部）配置文件" class="headerlink" title="五、YARN（生产管理部）配置文件"></a>五、YARN（生产管理部）配置文件</h2><h3 id="1-核心配置文件：yarn-site-xml"><a href="#1-核心配置文件：yarn-site-xml" class="headerlink" title="1. 核心配置文件：yarn-site.xml"></a>1. 核心配置文件：<code>yarn-site.xml</code></h3><p><strong>ResourceManager（生产管理部）配置</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产厂长的办公室地址 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>master<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>NodeManager（车间主任）配置</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生产环境准备 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="六、MapReduce（生产流水线）配置文件"><a href="#六、MapReduce（生产流水线）配置文件" class="headerlink" title="六、MapReduce（生产流水线）配置文件"></a>六、MapReduce（生产流水线）配置文件</h2><h3 id="1-核心配置文件：mapred-site-xml"><a href="#1-核心配置文件：mapred-site-xml" class="headerlink" title="1. 核心配置文件：mapred-site.xml"></a>1. 核心配置文件：<code>mapred-site.xml</code></h3><p><strong>Mapper&#x2F;Reducer（分拣&#x2F;组装工人）配置</strong>：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 使用YARN生产管理部来调度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="七、yarn环境的配置"><a href="#七、yarn环境的配置" class="headerlink" title="七、yarn环境的配置"></a>七、yarn环境的配置</h2><p><strong>1：yarn-env.sh</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设定JAVA环境变量 /etc/profile中已配置，可忽略--&gt;</span></span><br><span class="line">export JAVA_HOME=/opt/server/jdk1.8</span><br></pre></td></tr></table></figure><h2 id="八、mapred环境的配置"><a href="#八、mapred环境的配置" class="headerlink" title="八、mapred环境的配置"></a>八、mapred环境的配置</h2><p><strong>1：mapred-env.sh</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 设定JAVA环境变量 /etc/profile中已配置，可忽略--&gt;</span></span><br><span class="line">export JAVA_HOME=/opt/server/jdk1.8</span><br></pre></td></tr></table></figure><p>通过这些配置文件，我们可以精细控制Hadoop”工厂”中每个角色的行为，就像调整工厂各部门的工作规则一样。实际生产环境中，需要根据集群规模和数据特性来优化这些参数。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hadoop三大组件角色通俗解释</title>
      <link href="/2025/04/23/Hadoop%E4%B8%89%E5%A4%A7%E7%BB%84%E4%BB%B6%E8%A7%92%E8%89%B2%E9%80%9A%E4%BF%97%E8%A7%A3%E9%87%8A/"/>
      <url>/2025/04/23/Hadoop%E4%B8%89%E5%A4%A7%E7%BB%84%E4%BB%B6%E8%A7%92%E8%89%B2%E9%80%9A%E4%BF%97%E8%A7%A3%E9%87%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="Hadoop三大组件角色通俗解释"><a href="#Hadoop三大组件角色通俗解释" class="headerlink" title="Hadoop三大组件角色通俗解释"></a>Hadoop三大组件角色通俗解释</h1><p>Hadoop就像是一个大型数据加工厂，三大组件分别负责不同的工作。我用最通俗的方式来解释它们各自的角色：</p><h2 id="1-HDFS（Hadoop分布式文件系统）-工厂的仓库部门"><a href="#1-HDFS（Hadoop分布式文件系统）-工厂的仓库部门" class="headerlink" title="1. HDFS（Hadoop分布式文件系统） - 工厂的仓库部门"></a>1. HDFS（Hadoop分布式文件系统） - 工厂的仓库部门</h2><p><strong>角色分工</strong>：</p><ul><li><strong>NameNode（仓库总管）</strong>：<ul><li>全厂唯一，掌握所有重要信息（文件目录结构）</li><li>知道每个文件块存放在哪个仓库（DataNode）</li><li>不实际存货物，只记录账本（元数据）</li><li>如果仓库总管请假（宕机），全厂停工（单点故障）</li></ul></li><li><strong>DataNode（仓库）</strong>：<ul><li>实际存放货物（数据块）的仓库</li><li>定期向秘书汇报库存情况（心跳检测）</li><li>默认把每件货物复制3份放在不同仓库（3副本机制）</li></ul></li><li><strong>Secondary NameNode（仓库总管助理）</strong>：<ul><li>不是真正的备用秘书</li><li>定期帮仓库总管整理账本（合并fsimage和edits）</li><li>仓库总管出问题时，实习秘书不能直接顶替</li></ul></li></ul><p><strong>通俗理解</strong>：<br>想象你要存一个超大文件（比如1TB的电影），HDFS会把它切成很多小块（默认128MB&#x2F;块），然后分散存放在不同仓库里，并在另外两个仓库各存一份备份。秘书那里只记录”电影被切成哪些块，分别存在哪里”。</p><h2 id="2-YARN（资源调度系统）-工厂的人力资源部"><a href="#2-YARN（资源调度系统）-工厂的人力资源部" class="headerlink" title="2. YARN（资源调度系统） - 工厂的人力资源部"></a>2. YARN（资源调度系统） - 工厂的人力资源部</h2><p><strong>角色分工</strong>：</p><ul><li><strong>ResourceManager（生产厂长）</strong>：<ul><li>全厂唯一，掌握所有车间（计算资源）的情况</li><li>负责接单（接收客户端任务请求）</li><li>决定把任务派给哪个车间主任（NodeManager）</li></ul></li><li><strong>NodeManager（车间主任）</strong>：<ul><li>每个车间（服务器）一个主任</li><li>管理本车间的工人（CPU、内存等资源）</li><li>向生产厂长定期汇报本车间人力情况</li><li>按照指示启动具体工作（Container）</li></ul></li></ul><p><strong>通俗理解</strong>：<br>当MapReduce等程序要运行时，YARN就像生产管理部：生产厂长（RM）接到分析数据的任务，找来几个车间主任（NM）商量，分配任务到多个车间完成具体的计算工作。</p><h2 id="3-MapReduce（计算框架）-工厂的生产流水线"><a href="#3-MapReduce（计算框架）-工厂的生产流水线" class="headerlink" title="3. MapReduce（计算框架） - 工厂的生产流水线"></a>3. MapReduce（计算框架） - 工厂的生产流水线</h2><p><strong>角色分工</strong>：</p><ul><li><p><strong>Mapper（分拣工人）</strong>：</p><ul><li>把原材料（输入数据）初步分类处理</li><li>比如统计文章词频时，把每篇文章拆成（单词，1）的键值对</li><li>各个分拣工并行工作，互不干扰</li></ul></li><li><p><strong>Reducer（组装工人）</strong>：</p><ul><li>把分拣好的半成品汇总加工</li><li>接过分拣工的结果，把相同key的值合并</li><li>比如把（hadoop,(1,1,1)）合并成（hadoop,3）</li></ul></li><li><p><strong>Shuffle &amp; Sort（物流部门）</strong>：</p><ul><li>把分拣工的输出运输到合适的组装工那里</li><li>确保相同key的半成品都送到同一个组装工</li><li>运输过程中还会按key排序</li></ul></li></ul><p><strong>通俗理解</strong>：<br>假设要统计全厂所有工人的籍贯分布：</p><ol><li>每个车间先自己统计本车间情况（Map阶段）</li><li>把各车间的统计结果按省份汇总（Shuffle）</li><li>最后合并出全厂的籍贯统计表（Reduce阶段）</li></ol><h2 id="三者的配合关系"><a href="#三者的配合关系" class="headerlink" title="三者的配合关系"></a>三者的配合关系</h2><p>整个Hadoop工厂的工作流程：</p><ol><li>原材料（数据）先存进HDFS仓库（3个备份确保安全）</li><li>当需要加工数据时，YARN人力资源部调配工人</li><li>MapReduce流水线开始生产：<ul><li>先从HDFS仓库取原材料</li><li>经过Mapper分拣、Shuffle运输、Reducer组装</li><li>最后把成品存回HDFS仓库</li></ul></li></ol><h2 id="常见误区澄清"><a href="#常见误区澄清" class="headerlink" title="常见误区澄清"></a>常见误区澄清</h2><ol><li><strong>NameNode不是计算节点</strong>：就像厂长秘书不亲自搬货，NameNode不存储实际数据</li><li><strong>YARN不只是为MapReduce服务</strong>：现在人力资源部（YARN）也支持其他生产流程（如Spark、Flink）</li><li><strong>Secondary NameNode不是热备</strong>：它只是帮助NameNode整理账本的助手，不能直接接管工作</li></ol><p>这样的角色分工使得Hadoop能够可靠地存储海量数据（HDFS），高效地调度集群资源（YARN），并以并行方式处理大数据（MapReduce）。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>管道符与重定向</title>
      <link href="/2025/04/18/%E7%AE%A1%E9%81%93%E7%AC%A6%E4%B8%8E%E9%87%8D%E5%AE%9A%E5%90%91/"/>
      <url>/2025/04/18/%E7%AE%A1%E9%81%93%E7%AC%A6%E4%B8%8E%E9%87%8D%E5%AE%9A%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h1 id="所谓理解就是用自己通俗易懂的话去解释专业知识"><a href="#所谓理解就是用自己通俗易懂的话去解释专业知识" class="headerlink" title="所谓理解就是用自己通俗易懂的话去解释专业知识"></a>所谓理解就是用自己通俗易懂的话去解释专业知识</h1><p><strong>题目1：文件列表与筛选</strong></p><p>查看&#x2F;root目录，保证这个目录下包含了一些文件和文件夹。如果没有则随意创建几个文件和目录</p><p><strong>问题：</strong></p><ol><li><p>请使用 <code>ls -l</code> 命令列出当前目录下的所有文件和文件夹的详细信息，并将输出结果保存到一个名为 <code>file_list.txt</code> 的文件中。写出你使用的完整命令。</p></li><li><p>在上一步中，你已经将文件列表保存到了 <code>file_list.txt</code> 文件中。现在，请使用管道符 <code>|</code> 结合 <code>grep</code> 命令，从 <code>file_list.txt</code> 文件中筛选出包含 “rw-r–r–” (表示普通文件权限) 的行，并将筛选结果显示在终端上。写出你使用的完整命令。</p></li><li><p>继续使用 <code>file_list.txt</code> 文件。请使用管道符 <code>|</code> 结合 <code>grep</code> 命令，筛选出包含 “drwxr-xr-x” (表示目录权限) 的行，并将这些筛选结果追加到之前创建的 <code>file_list.txt</code> 文件的末尾。写出你使用的完整命令。</p></li><li><p>现在，<code>file_list.txt</code> 文件中应该包含了所有文件和文件夹的详细信息，并且在末尾追加了目录的信息。请使用管道符 <code>|</code> 结合 <code>grep</code> 命令，从 <code>file_list.txt</code> 文件中筛选出包含 “test” 关键字的行，并将结果保存到一个名为 <code>test_items.txt</code> 的新文件中。写出你使用的完整命令。</p></li></ol><p><strong>答案示例：</strong></p><p>以下是参考答案,重点是要理解管道符的用法，尽量用自己的话去总结和解释：</p><ol><li><code>ls -l &gt; file_list.txt</code></li><li><code>cat file_list.txt | grep &quot;rw-r--r--&quot;</code></li><li><code>cat file_list.txt | grep &quot;drwxr-xr-x&quot; &gt;&gt; file_list.txt</code></li><li><code>cat file_list.txt | grep &quot;test&quot; &gt; test_items.txt</code></li></ol><p><strong>解释：</strong></p><ul><li><strong><code>&gt;</code> (大于号)：</strong> 输出重定向符，将命令的输出结果覆盖写入到指定文件中。如果文件不存在则创建，如果存在则覆盖原有内容。</li><li><strong><code>&gt;&gt;</code> (双大于号)：</strong> 追加重定向符，将命令的输出结果追加写入到指定文件的末尾。如果文件不存在则创建。</li><li><strong><code>|</code> (竖线)：</strong> 管道符，将前一个命令的输出作为后一个命令的输入。</li></ul><p><strong>题目2：处理命令输出</strong></p><p>在&#x2F;root目录下创建名为test的目录，在test目录下创建一个名为 <code>script.sh</code> 的脚本文件，将下面的脚本内容复制，用vi编辑，粘贴。创建这个文件后要用<code>chmod +x script.sh</code>命令给它执行权限，然后运行这个脚本文件，它会创建一个名为 <code>success.txt</code> 的文件，并在创建过程中可能会遇到一些错误。（意思是运行这个脚本文件，它会有标准输出，也会有错误输出。）</p><p><strong>script.sh 脚本内容：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试创建一个文件</span></span><br><span class="line"><span class="built_in">touch</span> success.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟一个可能出错的情况</span></span><br><span class="line"><span class="keyword">if</span> [ -e success.txt ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;文件 success.txt 创建成功。&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;创建 success.txt 文件失败。&quot;</span> &gt;&amp;2 <span class="comment"># 将错误信息输出到标准错误</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试删除一个可能不存在的文件</span></span><br><span class="line"><span class="built_in">rm</span> non_existent_file.txt</span><br></pre></td></tr></table></figure><p><strong>问题：</strong></p><ol><li><p>请执行 <code>script.sh</code> 脚本，并将脚本的标准输出重定向到一个名为 <code>output.log</code> 的文件中，同时将脚本的标准错误输出重定向到一个名为 <code>error.log</code> 的文件中。写出你使用的完整命令。</p></li><li><p>假设在执行完上述命令后，<code>error.log</code> 文件中包含了一些错误信息。请使用管道符 <code>|</code> 结合 <code>grep</code> 命令，从 <code>error.log</code> 文件中筛选出包含 “No such file or directory” 的错误信息，并将筛选结果显示在终端上。写出你使用的完整命令。</p></li><li><p>假设你希望将 <code>script.sh</code> 脚本的标准输出追加到一个名为 <code>combined.log</code> 的文件中，并且将标准错误输出也追加到同一个 <code>combined.log</code> 文件中。写出你使用的完整命令。</p></li></ol><p><strong>答案示例：</strong></p><p>以下是参考答案,重点是要理解重定向和管道符的用法，尽量用自己的话去总结和解释：</p><ol><li><code>./script.sh &gt; output.log 2&gt; error.log</code></li><li><code>cat error.log | grep &quot;No such file or directory&quot;</code></li><li><code>./script.sh &gt;&gt; combined.log 2&gt;&amp;1</code>或者<code>./script.sh &amp;&gt;&gt; combined.log</code></li></ol><p><strong>解释：</strong></p><ul><li><strong><code>&gt;</code>:</strong> 标准输出重定向到文件。</li><li><strong><code>2&gt;</code>:</strong> 标准错误输出重定向到文件。</li><li><strong><code>&gt;&gt;</code>:</strong> 标准输出追加重定向到文件。</li><li><strong><code>&amp;&gt;&gt;</code>:</strong> 标准输出和标准错误输出都重定向到文件。</li><li><strong><code>2&gt;&amp;1</code>:</strong> 将标准错误输出（文件描述符 2）重定向到与标准输出（文件描述符 1）相同的位置（即 <code>combined.log</code> 文件）。</li></ul><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop生态组件安装部署的标准化基本流程</title>
      <link href="/2025/04/08/hadoop%E7%94%9F%E6%80%81%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E7%9A%84%E6%A0%87%E5%87%86%E5%8C%96%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/"/>
      <url>/2025/04/08/hadoop%E7%94%9F%E6%80%81%E7%BB%84%E4%BB%B6%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2%E7%9A%84%E6%A0%87%E5%87%86%E5%8C%96%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Hadoop生态组件的安装部署基本可以归纳为以下标准化流程："><a href="#Hadoop生态组件的安装部署基本可以归纳为以下标准化流程：" class="headerlink" title="Hadoop生态组件的安装部署基本可以归纳为以下标准化流程："></a>Hadoop生态组件的安装部署基本可以归纳为以下标准化流程：</h2><hr><h3 id="通用安装思路总结"><a href="#通用安装思路总结" class="headerlink" title="通用安装思路总结"></a><strong>通用安装思路总结</strong></h3><ol><li><p><strong>解压文件</strong>  </p><ul><li>下载压缩包 → 解压到指定目录（如<code>/opt/</code>）→ 重命名便于管理 → 设置权限</li></ul></li><li><p><strong>配置环境变量</strong>  </p><ul><li>在<code>~/.bashrc</code>或者<code>/etc/profile</code>中添加<code>XXX_HOME</code>和<code>PATH</code> → <code>source</code>生效<br><em>（关键变量：<code>JAVA_HOME</code>, <code>HADOOP_HOME</code>, <code>HBASE_HOME</code>, <code>HIVE_HOME</code>等）</em></li></ul></li><li><p><strong>配置核心文件</strong>  </p><ul><li><strong>Hadoop</strong>: <code>core-site.xml</code>, <code>hdfs-site.xml</code>, <code>yarn-site.xml</code>, <code>mapred-site.xml</code>, <code>workers</code>  </li><li><strong>HBase</strong>: <code>hbase-site.xml</code>, <code>regionservers</code>  </li><li><strong>Hive</strong>: <code>hive-env.sh</code> <code>hive-site.xml</code>  </li><li><strong>通用原则</strong>：  <ul><li>指定主节点地址（如<code>fs.defaultFS</code>）  </li><li>配置分布式存储路径  </li><li>设置副本数、端口等参数</li></ul></li></ul></li><li><p><strong>分发同步配置</strong>  </p><ul><li>通过<code>scp</code>将配置好的目录复制到其他节点  </li><li>确保所有节点环境变量和配置文件一致</li></ul></li><li><p><strong>启动程序</strong>  </p><ul><li><strong>顺序要求</strong>：  <ol><li>先启动HDFS（<code>start-dfs.sh</code>）  </li><li>再启动YARN（<code>start-yarn.sh</code>）  </li><li>最后启动其他组件（如HBase、Hive）</li></ol></li><li><strong>关键命令</strong>：  <ul><li>首次需格式化HDFS（<code>hdfs namenode -format</code>）  </li><li>单独启动HistoryServer（<code>mapred --daemon start historyserver</code>）</li></ul></li></ul></li></ol><hr><h3 id="为什么是这个逻辑？"><a href="#为什么是这个逻辑？" class="headerlink" title="为什么是这个逻辑？"></a><strong>为什么是这个逻辑？</strong></h3><ol><li><p><strong>解压与环境变量</strong>  </p><ul><li>解决”在哪里找到软件”的问题，让系统能定位可执行文件。</li></ul></li><li><p><strong>配置文件</strong>  </p><ul><li>解决”如何运行”的问题，定义集群拓扑、存储路径、通信端口等关键参数。</li></ul></li><li><p><strong>分发与启动</strong>  </p><ul><li>解决”分布式协作”的问题，确保所有节点使用相同配置，并按依赖顺序启动服务。</li></ul></li></ol><hr><h3 id="易错点提醒"><a href="#易错点提醒" class="headerlink" title="易错点提醒"></a><strong>易错点提醒</strong></h3><ol><li><p><strong>权限问题</strong>  </p><ul><li>确保所有节点对安装目录有读写权限（如<code>chown</code>操作）。</li></ul></li><li><p><strong>配置一致性</strong>  </p><ul><li>多节点集群中，同一配置文件的参数必须同步（如<code>fs.defaultFS</code>指向的namenode地址）。</li></ul></li><li><p><strong>启动顺序</strong>  </p><ul><li>底层服务优先（如HDFS→YARN→HBase→Hive），类似”先盖楼再装修”。</li></ul></li><li><p><strong>日志排查</strong>  </p><ul><li>任何服务启动失败时，第一时间查看<code>logs/</code>目录下的日志文件。</li></ul></li></ol><hr><h3 id="一句话流程"><a href="#一句话流程" class="headerlink" title="一句话流程"></a><strong>一句话流程</strong></h3><p><strong>解压 → 配环境 → 改配置 → 同步 → 按序启动 → 验服务</strong><br>掌握这个模式后，大多数分布式系统的部署（如Spark、Flink等）均可触类旁通。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql简单测试题</title>
      <link href="/2025/04/08/mysql%E5%85%A5%E9%97%A8%E6%B5%8B%E8%AF%95%E9%A2%98/"/>
      <url>/2025/04/08/mysql%E5%85%A5%E9%97%A8%E6%B5%8B%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL-入门编程-数据库（表）的建立，基础查询、排序、分组"><a href="#MySQL-入门编程-数据库（表）的建立，基础查询、排序、分组" class="headerlink" title="MySQL 入门编程 (数据库（表）的建立，基础查询、排序、分组)"></a>MySQL 入门编程 (数据库（表）的建立，基础查询、排序、分组)</h1><h2 id="场景设定"><a href="#场景设定" class="headerlink" title="场景设定"></a>场景设定</h2><p>假设你需要为一个小型在线商店管理商品信息。你需要创建一个 <code>Products</code>（商品）表来存储商品数据，并执行一些基本的查询操作。<code>请将命令语句和运行结果截图贴在答案里</code></p><hr><h2 id="第一部分：创建表和插入数据"><a href="#第一部分：创建表和插入数据" class="headerlink" title="第一部分：创建表和插入数据"></a>第一部分：创建表和插入数据</h2><ol><li><p><strong>创建 <code>Products</code> 表：</strong></p><ul><li>表名：<code>Products</code></li><li>包含以下列：<ul><li><code>product_id</code>：商品ID，整数类型 (<code>INT</code>)，设为<strong>主键</strong> (<code>PRIMARY KEY</code>)，<strong>自动增长</strong> (<code>AUTO_INCREMENT</code>)。</li><li><code>product_name</code>：商品名称，字符串类型 (<code>VARCHAR</code>)，长度最多100个字符，<strong>不能为空</strong> (<code>NOT NULL</code>)。</li><li><code>category</code>：商品类别，字符串类型 (<code>VARCHAR</code>)，长度最多50个字符。</li><li><code>price</code>：商品价格，小数类型 (<code>DECIMAL</code>)，总共10位数，其中2位是小数，<strong>不能为空</strong> (<code>NOT NULL</code>)。</li><li><code>stock_quantity</code>：库存数量，整数类型 (<code>INT</code>)，<strong>默认值为0</strong>。</li><li><code>date_added</code>：上架日期，日期类型 (<code>DATE</code>)。</li></ul></li></ul></li><li><p><strong>向 <code>Products</code> 表插入数据：</strong></p><ul><li>插入下面的商品记录。<table><thead><tr><th>product_name</th><th>category</th><th>price</th><th>stock_quantity</th><th>date_added</th></tr></thead><tbody><tr><td>华为 Mate 60 Pro</td><td>手机数码</td><td>6999.00</td><td>150</td><td>2024-09-01</td></tr><tr><td>小米 无线蓝牙耳机 Air 3</td><td>手机数码</td><td>199.00</td><td>500</td><td>2024-10-15</td></tr><tr><td>《三体》全集</td><td>图书音像</td><td>98.50</td><td>300</td><td>2024-08-20</td></tr><tr><td>美的 智能电饭煲</td><td>家用电器</td><td>299.00</td><td>200</td><td>2024-11-05</td></tr><tr><td>纯棉印花T恤</td><td>服装鞋包</td><td>79.00</td><td>800</td><td>2025-03-10</td></tr><tr><td>乐高 创意百变系列</td><td>玩具乐器</td><td>450.00</td><td>120</td><td>2024-12-01</td></tr><tr><td>舒适办公椅</td><td>家居生活</td><td>599.00</td><td>80</td><td>2025-01-20</td></tr><tr><td>运动跑步鞋 Pro</td><td>服装鞋包</td><td>388.00</td><td>250</td><td>2025-02-15</td></tr><tr><td>联想 办公用笔记本</td><td>电脑办公</td><td>8500.00</td><td>60</td><td>2025-01-05</td></tr><tr><td>进口猫粮 5kg</td><td>宠物生活</td><td>188.00</td><td>400</td><td>2025-04-01</td></tr></tbody></table></li></ul></li></ol><hr><h2 id="第二部分：基本查询-SELECT"><a href="#第二部分：基本查询-SELECT" class="headerlink" title="第二部分：基本查询 (SELECT)"></a>第二部分：基本查询 (SELECT)</h2><p>使用你创建并填充了数据的 <code>Products</code> 表，完成以下查询任务：</p><ol start="3"><li><strong>查询所有商品信息：</strong> 显示 <code>Products</code> 表中的所有列和所有行。</li><li><strong>查询特定列：</strong> 只显示所有商品的名称 (<code>product_name</code>) 和价格 (<code>price</code>)。</li><li><strong>查询不重复的商品类别：</strong> 显示 <code>Products</code> 表中所有出现过的 <code>category</code>，每个类别只显示一次。</li><li><strong>条件查询 - 按类别：</strong> 查询所有类别为 <code>&#39;服装鞋包&#39;</code> 的商品信息。</li><li><strong>条件查询 - 按价格范围：</strong> 查询所有价格大于 <code>300.00</code> 并且小于 <code>1000.00</code> 的商品信息。</li><li><strong>条件查询 - 按库存：</strong> 查询所有库存数量少于 <code>200</code> 件的商品名称和库存数量。</li><li><strong>条件查询 - 多条件组合 (OR)：</strong> 查询类别为 <code>&quot;手机数码&quot;</code> 或者价格低于 <code>300.00</code> 的商品信息。</li><li><strong>条件查询 - 查找特定名称：</strong> 查询商品名称包含 <code>&quot;办公&quot;</code>（不区分大小写）的商品信息。（提示：使用 <code>LIKE</code> 操作符）</li></ol><hr><h2 id="第三部分：排序-ORDER-BY"><a href="#第三部分：排序-ORDER-BY" class="headerlink" title="第三部分：排序 (ORDER BY)"></a>第三部分：排序 (ORDER BY)</h2><ol start="11"><li><strong>按价格升序排序：</strong> 查询所有商品信息，并按价格 (<code>price</code>) 从低到高排序。</li><li><strong>按上架日期降序排序：</strong> 查询所有商品信息，并按上架日期 (<code>date_added</code>) 从最新到最旧排序。</li><li><strong>按类别和价格排序：</strong> 查询所有商品信息，并按类别 (<code>category</code>) 字母顺序排序。</li></ol><hr><h2 id="第四部分：分组和聚合-GROUP-BY-Aggregate-Functions"><a href="#第四部分：分组和聚合-GROUP-BY-Aggregate-Functions" class="headerlink" title="第四部分：分组和聚合 (GROUP BY, Aggregate Functions)"></a>第四部分：分组和聚合 (GROUP BY, Aggregate Functions)</h2><ol start="14"><li><strong>统计商品总数：</strong> 计算 <code>Products</code> 表中一共有多少种商品。</li><li><strong>按类别统计商品数量：</strong> 计算每个类别 (<code>category</code>) 下分别有多少种商品。</li><li><strong>计算平均价格：</strong> 计算所有商品的平均价格。</li><li><strong>计算每个类别的平均价格：</strong> 计算每个类别 (<code>category</code>) 下商品的平均价格。</li><li><strong>计算总库存量：</strong> 计算所有商品的总库存数量 (<code>stock_quantity</code>)。</li><li><strong>计算每个类别的总库存量：</strong> 计算每个类别 (<code>category</code>) 下商品的总库存数量。</li><li><strong>查找最高和最低价格：</strong> 找出所有商品中的最高价格和最低价格。</li></ol><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>就问你苦不苦</title>
      <link href="/2025/03/29/%E5%B0%B1%E9%97%AE%E4%BD%A0%E8%8B%A6%E4%B8%8D%E8%8B%A6/"/>
      <url>/2025/03/29/%E5%B0%B1%E9%97%AE%E4%BD%A0%E8%8B%A6%E4%B8%8D%E8%8B%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="先不考虑天赋，单单看这小小萌娃熟练的指法，就能想到背后付出了多少努力，小小年纪，怎不让人心疼！"><a href="#先不考虑天赋，单单看这小小萌娃熟练的指法，就能想到背后付出了多少努力，小小年纪，怎不让人心疼！" class="headerlink" title="先不考虑天赋，单单看这小小萌娃熟练的指法，就能想到背后付出了多少努力，小小年纪，怎不让人心疼！"></a>先不考虑天赋，单单看这小小萌娃熟练的指法，就能想到背后付出了多少努力，小小年纪，怎不让人心疼！</h2><h2 id="希望世界善待每一个勤奋努力的灵魂！"><a href="#希望世界善待每一个勤奋努力的灵魂！" class="headerlink" title="希望世界善待每一个勤奋努力的灵魂！"></a>希望世界善待每一个勤奋努力的灵魂！</h2><div class="video-container"><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113197117873930&bvid=BV1Dzsre9E9B&cid=25997675574&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 杂谈 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql在centos7中rpm安装问题和方法</title>
      <link href="/2025/03/27/mysql%E5%9C%A8centos7%E4%B8%ADrpm%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E5%92%8C%E6%96%B9%E6%B3%95/"/>
      <url>/2025/03/27/mysql%E5%9C%A8centos7%E4%B8%ADrpm%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98%E5%92%8C%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL相关问题解答"><a href="#MySQL相关问题解答" class="headerlink" title="MySQL相关问题解答"></a>MySQL相关问题解答</h1><h2 id="MySQL-RPM-包安装顺序及依赖解决"><a href="#MySQL-RPM-包安装顺序及依赖解决" class="headerlink" title="MySQL RPM 包安装顺序及依赖解决"></a>MySQL RPM 包安装顺序及依赖解决</h2><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>从<code>www.mysql.com</code>下载<code>mysql-5.7.44-1.el7.x86_64.rpm-bundle.tar</code>后，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf mysql-5.7.44-1.el7.x86_64.rpm-bundle.tar</span><br></pre></td></tr></table></figure><p> 得到以下文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql-community-client-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-common-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-devel-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-embedded-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-embedded-compat-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-embedded-devel-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-libs-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-libs-compat-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-server-5.7.44-1.el7.x86_64.rpm</span><br><span class="line">mysql-community-test-5.7.44-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure><p>尝试安装 MySQL 5.7 RPM 包时遇到依赖冲突和缺失的问题。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="卸载-MariaDB-库"><a href="#卸载-MariaDB-库" class="headerlink" title="卸载 MariaDB 库"></a>卸载 MariaDB 库</h4><p>centos7中预装了 <code>mariadb-libs</code>，因为其与 MySQL 社区版包有文件冲突,需要卸载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -e --nodeps mariadb-libs</span><br></pre></td></tr></table></figure><p>如果系统没有安装，则无需卸载。</p><h4 id="按顺序安装-MySQL-RPM-包"><a href="#按顺序安装-MySQL-RPM-包" class="headerlink" title="按顺序安装 MySQL RPM 包"></a>按顺序安装 MySQL RPM 包</h4><p>按照以下顺序安装 MySQL RPM 包：</p><ol><li><p>安装 <code>mysql-community-common</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -ivh mysql-community-common-5.7.44-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>安装 <code>mysql-community-libs</code> 和 <code>mysql-community-libs-compat</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -ivh mysql-community-libs-5.7.44-1.el7.x86_64.rpm mysql-community-libs-compat-5.7.44-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>安装 <code>mysql-community-client</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -ivh mysql-community-client-5.7.44-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li><li><p>安装 <code>mysql-community-server</code>，注意解决依赖项：</p><ul><li>确保安装了 Perl 和 net-tools：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install perl net-tools</span><br></pre></td></tr></table></figure></li><li>然后安装 MySQL Server：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> rpm -ivh mysql-community-server-5.7.44-1.el7.x86_64.rpm</span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="数据库初始化和配置"><a href="#数据库初始化和配置" class="headerlink" title="数据库初始化和配置"></a>数据库初始化和配置</h3><ol><li><p>初始化数据库：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysqld --initialize --user=mysql [--basedir=/usr --datadir=/var/lib/mysql] <span class="comment"># []内为可选</span></span><br></pre></td></tr></table></figure><p><strong>在这里有疑问</strong><br>经测试即使不进行上面的初始化，在用’systemctl start mysqld’启动服务后，也会自动进行初始化。所谓初始化，可以理解为创建必须的数据库和用户，以及一些初始化数据。比如sys,mysql,performance_schema，information_schema四个数据库。其中<code>mysql</code>数据库是用来存储MySQL服务器内部信息的，比如<code>用户信息</code>，<code>权限信息</code>，数据库信息等等。非常的关键。即使初学者也要了解其中的部分内容。初始化通常会创建一个超级用户账户，通常是 root 用户（如 ‘root‘@’localhost’）包含在mysql.user 表中。</p></li><li><p>启动 MySQL 服务：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start mysqld</span><br></pre></td></tr></table></figure><p> 如前面所述，初始化或启动 MySQL 服务后，会自动创建一个默认的 root 用户，密码为随机生成的字符串。这个密码存放在&#x2F;var&#x2F;log&#x2F;mysqld.log 文件中。可以通过以下命令获取： </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> grep <span class="string">&#x27;temporary password&#x27;</span> /var/log/mysqld.log</span><br></pre></td></tr></table></figure><p>只有获取了密码后，我们才可以使用以下命令登录 MySQL 服务器：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p <span class="comment"># 复制粘贴上面获取的密码</span></span><br></pre></td></tr></table></figure><p>进入数据库系统后，首先要重设密码。在重设密码前需要设置密码策略和密码的最小长度。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_policy<span class="operator">=</span>low;</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> validate_password_length<span class="operator">=</span><span class="number">6</span>; # 设置密码最小长度为<span class="number">6</span>,根据题目要求。</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;your_new_password&#x27;</span>; # 修改密码</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>继续设置开启远程登录：</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;your_new_password&#x27;</span>; # 创建远程登录用户</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;your_new_password&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION; # 授予权限</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure></li><li><p>无密码初始化或无密码进入mysql服务器的两种方法，考试中经常用到：</p><ul><li>1，无密码初始化</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> mysqld --initialize-insecure --user=mysql [--basedir=/usr --datadir=/var/lib/mysql] <span class="comment"># []内为可选</span></span><br></pre></td></tr></table></figure><p> 此时登录mysql服务器时，不需要输入密码，直接登录即可。</p><ul><li>2，无密码进入mysql服务器<br> 编辑 MySQL 的配置文件 (&#x2F;etc&#x2F;my.cnf)，在 [mysqld] 部分下添加一行 skip-grant-tables。保存文件，然后正常启动 MySQL 服务 (sudo systemctl start mysqld 等)。可不需要密码进入。<strong>完成后务必记得移除这一行！</strong></li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot</span><br></pre></td></tr></table></figure><p> <strong><code>以上两种方法无密码登录后，重设密码和创建远程登录按照前面的操作。</code></strong><br><strong>展开说一说</strong></p><ul><li>mysql初始化后会创建一个数据库mysql，里面有一个表user.这个表里面有root用户，root用户是本地登录的，所以是root@localhost，而%是远程登录的，所以是root@%。</li><li>可以通过下面命令查看这个表</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="keyword">user</span>,host <span class="keyword">from</span> mysql.user;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>          <span class="operator">|</span> host      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> root          <span class="operator">|</span> <span class="operator">%</span>         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.session <span class="operator">|</span> localhost <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql.sys     <span class="operator">|</span> localhost <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> root          <span class="operator">|</span> localhost <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><p>初学者因为对于命令的不熟悉，只能是亦步亦趋的复制粘贴，然而以上的命令是需要牢牢记住的，所以，我们要明白命令的含义，不断的练习。另外找个时间和地方，来解释这些命令。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库语言分类及简单介绍</title>
      <link href="/2025/03/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80%E5%88%86%E7%B1%BB%E5%8F%8A%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
      <url>/2025/03/27/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AF%AD%E8%A8%80%E5%88%86%E7%B1%BB%E5%8F%8A%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="SQL语言分类及简单介绍"><a href="#SQL语言分类及简单介绍" class="headerlink" title="SQL语言分类及简单介绍"></a>SQL语言分类及简单介绍</h1><p>SQL语言是数据库操作语言，用于操作数据库。</p><ul><li>大小写不敏感</li><li>需要以;号结尾</li></ul><h2 id="数据定义-DDL"><a href="#数据定义-DDL" class="headerlink" title="数据定义 DDL"></a>数据定义 DDL</h2><p>数据库的创建，删除。数据表的创建删除。</p><h3 id="1-数据库管理语法"><a href="#1-数据库管理语法" class="headerlink" title="1. 数据库管理语法"></a>1. 数据库管理语法</h3><ul><li><code>SHOW DATABASES;</code> – 查看数据库</li><li><code>USE 数据库名；</code> – 使用打开数据库</li><li><code>CREATE DATABASE if not exists 数据库名 charset=utf8mb4;</code> – 创建数据库</li><li><code>DROP DATABASE 数据库名；</code> – 删除数据库</li><li><code>select database();</code> – 查看当前打开的数据库</li></ul><p>创建数据库(IF NOT EXISTS意思是如果不存在的话就创建，存在的话就忽略此句，不创建)：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> student_management CHARSET <span class="operator">=</span> utf8mb4;</span><br></pre></td></tr></table></figure><p>删除数据库(IF EXISTS意思是如果存在的话就删除，不存在的话就忽略此句，不执行删除)：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> DATABASE IF <span class="keyword">EXISTS</span> student_management;</span><br></pre></td></tr></table></figure><h3 id="2-数据表管理语法"><a href="#2-数据表管理语法" class="headerlink" title="2. 数据表管理语法"></a>2. 数据表管理语法</h3><ul><li><code>CREATE TABLE 表名(字段名 字段类型,字段名 字段类型,...);</code> – 创建数据表</li></ul><p>创建数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> 表名 (</span><br><span class="line">    列名<span class="number">1</span> 数据类型 [约束], <span class="comment">--中括号表示可选填</span></span><br><span class="line">    列名<span class="number">2</span> 数据类型 [约束],</span><br><span class="line">    ...</span><br><span class="line">    [约束]</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>举例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create table</span> tea_info(</span><br><span class="line">    id <span class="type">int</span> <span class="keyword">PRIMARY KEY</span> AUTO_INCREMENT, <span class="comment">-- id是主键，自增</span></span><br><span class="line">    name <span class="type">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT NULL</span>, <span class="comment">-- name是字段名，varchar(20)是字段类型，20是字段长度,not null表示不能为空</span></span><br><span class="line">    gender <span class="type">VARCHAR</span>(<span class="number">2</span>)</span><br><span class="line">    shenfenzhenghao <span class="type">VARCHAR</span>(<span class="number">18</span>) <span class="keyword">UNIQUE</span> <span class="keyword">NOT NULL</span>, <span class="comment">--UNIQUE表示唯一，not null表示不能为空</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>重要的 SQL 约束：<ul><li>PRIMARY KEY: 唯一标识表中的每一行。</li></ul><ul><li>NOT NULL: 确保列不能包含 NULL 值。</li><li>UNIQUE: 确保列中的所有值都不同。</li><li>AUTO_INCREMENT: 自动为新行生成唯一的数字。</li></ul></li></ul><ul><li><code>DROP TABLE IF EXISTS 表名；</code> – 删除数据表</li></ul><p>删除数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> students;</span><br></pre></td></tr></table></figure><ul><li><code>ALTER TABLE 表名 ADD 字段名 字段类型;</code> – 添加字段</li><li><code>ALTER TABLE 表名 DROP COLUMN 字段名;</code> – 删除字段</li><li><code>ALTER TABLE 表名 MODIFY 字段名 字段类型;</code> – 修改字段</li><li><code>ALTER TABLE 表名 CHANGE 字段名 新字段名 字段类型;</code> – 修改字段名</li><li><code>ALTER TABLE 表名 RENAME TO 新表名;</code> – 修改表名</li></ul><p>举例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER TABLE</span> 表名</span><br><span class="line">    [<span class="keyword">ADD</span> 列名 数据类型 [约束]]</span><br><span class="line">    [<span class="keyword">DROP</span> <span class="keyword">COLUMN</span> 列名]</span><br><span class="line">    [MODIFY <span class="keyword">COLUMN</span> 列名 数据类型 [约束]]</span><br><span class="line">    [RENAME <span class="keyword">COLUMN</span> 旧列名 <span class="keyword">TO</span> 新列名]</span><br><span class="line">    [<span class="keyword">ADD CONSTRAINT</span> 约束名 约束];</span><br></pre></td></tr></table></figure><h3 id="3-字段类型"><a href="#3-字段类型" class="headerlink" title="3. 字段类型"></a>3. 字段类型</h3><h4 id="1-数值类型"><a href="#1-数值类型" class="headerlink" title="1. 数值类型"></a>1. 数值类型</h4><h5 id="整数类型：用于存储整数值。"><a href="#整数类型：用于存储整数值。" class="headerlink" title="整数类型：用于存储整数值。"></a>整数类型：用于存储整数值。</h5><ul><li><code>TINYINT</code>：非常小的整数，有符号范围是 -128 到 127，无符号范围是 0 到 255。</li><li><code>SMALLINT</code>：小整数，有符号范围是 -32,768 到 32,767，无符号范围是 0 到 65,535。</li><li><code>MEDIUMINT</code>：中等大小的整数，有符号范围是 -8,388,608 到 8,388,607，无符号范围是 0 到 16,777,215。</li><li><code>INT</code> 或 <code>INTEGER</code>：标准整数，有符号范围是 -2,147,483,648 到 2,147,483,647，无符号范围是 0 到 4,294,967,295。</li><li><code>BIGINT</code>：大整数，有符号范围是 -9,223,372,036,854,775,808 到 9,223,372,036,854,775,807，无符号范围是 0 到 18,446,744,073,709,551,615。</li></ul><h5 id="浮点数类型：用于存储小数值。"><a href="#浮点数类型：用于存储小数值。" class="headerlink" title="浮点数类型：用于存储小数值。"></a>浮点数类型：用于存储小数值。</h5><ul><li><code>FLOAT(M,D)</code>：单精度浮点数，其中 M 是总位数，D 是小数点后的位数。</li><li><code>DOUBLE(M,D)</code>：双精度浮点数，M 和 D 的含义同上。</li><li><code>DECIMAL(M,D)</code> 或 <code>NUMERIC(M,D)</code>：定点数，适合存储需要精确的小数，如货币金额。</li></ul><h4 id="2-字符串类型"><a href="#2-字符串类型" class="headerlink" title="2. 字符串类型"></a>2. 字符串类型</h4><h5 id="定长字符串："><a href="#定长字符串：" class="headerlink" title="定长字符串："></a>定长字符串：</h5><ul><li><code>CHAR(N)</code>：固定长度字符串，最大长度为 255 字节。如果存储的字符串短于定义的长度，则用空格填充到指定长度。</li></ul><h5 id="可变长字符串："><a href="#可变长字符串：" class="headerlink" title="可变长字符串："></a>可变长字符串：</h5><ul><li><code>VARCHAR(N)</code>：可变长度字符串，最大长度为 65,535 字节（受行大小限制）。</li><li><code>TEXT</code>：用于存储大文本数据，最大长度为 65,535 字节。</li><li><code>MEDIUMTEXT</code>：最大长度为 16,777,215 字节。</li><li><code>LONGTEXT</code>：最大长度为 4,294,967,295 字节。</li></ul><h4 id="3-日期和时间类型"><a href="#3-日期和时间类型" class="headerlink" title="3. 日期和时间类型"></a>3. 日期和时间类型</h4><ul><li><code>DATE</code>：用于存储日期值，格式为 ‘YYYY-MM-DD’。</li><li><code>TIME</code>：用于存储时间值或持续时间，格式为 ‘HH:MM:SS’。</li><li><code>DATETIME</code>：用于存储日期和时间值，格式为 ‘YYYY-MM-DD HH:MM:SS’。</li><li><code>TIMESTAMP</code>：类似于 DATETIME，但存储的是从 ‘1970-01-01 00:00:01’ UTC 到未来的某个时间的时间戳，支持自动初始化和更新。</li><li><code>YEAR</code>：以两位或四位数字的形式存储年份。</li></ul><h2 id="数据操作-DML"><a href="#数据操作-DML" class="headerlink" title="数据操作 DML"></a>数据操作 DML</h2><h3 id="数据的增删改查。"><a href="#数据的增删改查。" class="headerlink" title="数据的增删改查。"></a>数据的增删改查。</h3><ul><li><code>INSERT INTO 表名[(字段名1，字段名2，...)] VALUES (值1,值2,...),[(值1,值2,...)]...;</code> – 插入数据</li></ul><h4 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h4><p>对于自增字段，一般不需要手动指定自增字段的值，数据库会自动生成自增的值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT INTO</span> users (username, email, registration_date) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;JohnDoe&#x27;</span>, <span class="string">&#x27;john.doe@example.com&#x27;</span>, <span class="string">&#x27;2023-10-27&#x27;</span>); <span class="comment">-- 插入单条数据</span></span><br><span class="line"><span class="keyword">INSERT INTO</span> users (username, email, registration_date) <span class="keyword">VALUES</span> </span><br><span class="line">(<span class="string">&#x27;JohnDoe&#x27;</span>, <span class="string">&#x27;john.doe@example.com&#x27;</span>, <span class="string">&#x27;2023-10-27&#x27;</span>), </span><br><span class="line">(<span class="string">&#x27;JaneDoe&#x27;</span>, <span class="string">&#x27;jane.doe@example.com&#x27;</span>, <span class="string">&#x27;2023-10-28&#x27;</span>); <span class="comment">-- 插入多条数据</span></span><br></pre></td></tr></table></figure><ul><li><code>DELETE FROM 表名 WHERE 条件;</code> – 删除数据</li></ul><h4 id="举例：-1"><a href="#举例：-1" class="headerlink" title="举例："></a>举例：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 删除id为1的数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>); <span class="comment">-- 删除id为1,2,3的数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id <span class="keyword">BETWEEN</span> <span class="number">1</span> <span class="keyword">AND</span> <span class="number">3</span>; <span class="comment">-- 删除id为1到3的数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id <span class="operator">&gt;</span> <span class="number">3</span>; <span class="comment">-- 删除id大于3的数据</span></span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> users <span class="comment">-- 删除所有数据</span></span><br></pre></td></tr></table></figure><ul><li><code>UPDATE 表名 SET 字段名 = 值 WHERE 条件;</code> – 修改数据</li></ul><h4 id="举例：-2"><a href="#举例：-2" class="headerlink" title="举例："></a>举例：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> users <span class="keyword">SET</span> username <span class="operator">=</span> <span class="string">&#x27;John Doe&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 修改id为1的用户名</span></span><br><span class="line"><span class="keyword">UPDATE</span> users <span class="keyword">SET</span> username <span class="operator">=</span> <span class="string">&#x27;John Doe&#x27;</span>, email <span class="operator">=</span> <span class="string">&#x27;john.doe@example.com&#x27;</span> <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 修改id为1的用户名和邮箱</span></span><br></pre></td></tr></table></figure><h2 id="数据查询-DQL"><a href="#数据查询-DQL" class="headerlink" title="数据查询 DQL"></a>数据查询 DQL</h2><h3 id="数据的普通查询。"><a href="#数据的普通查询。" class="headerlink" title="数据的普通查询。"></a>数据的普通查询。</h3><ul><li><code>SELECT 列名1, 列名2, ... FROM 表名 WHERE 条件;</code> – 查询数据</li></ul><h4 id="举例：-3"><a href="#举例：-3" class="headerlink" title="举例："></a>举例：</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users; <span class="comment">-- 查询所有数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id <span class="operator">=</span> <span class="number">1</span>; <span class="comment">-- 查询id为1的数据</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">WHERE</span> id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>); <span class="comment">-- 查询id为1,2,3的数据</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="数据的排序："><a href="#数据的排序：" class="headerlink" title="数据的排序："></a>数据的排序：</h3><ul><li><code>SELECT 列名1, 列名2, ... FROM 表名 ORDER BY 列名1, 列名2, ... [ASC|DESC];</code> – 排序。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">ASC</span>; <span class="comment">-- 按照id升序排列</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">FROM</span> users <span class="keyword">ORDER</span> <span class="keyword">BY</span> id <span class="keyword">DESC</span>; <span class="comment">-- 按照id降序排列</span></span><br></pre></td></tr></table></figure><h3 id="数据的分组："><a href="#数据的分组：" class="headerlink" title="数据的分组："></a>数据的分组：</h3><ul><li><code>SELECT 列名1, 列名2, ... FROM 表名 GROUP BY 列名1, 列名2, ... ;</code> – 分组。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="built_in">COUNT</span>(<span class="operator">*</span>) <span class="keyword">AS</span> total, gender <span class="keyword">FROM</span> users <span class="keyword">GROUP</span> <span class="keyword">BY</span> gender; <span class="comment">-- 按照性别分组，统计每个性别的总人数</span></span><br><span class="line"><span class="keyword">SELECT</span> grade,<span class="built_in">avg</span>(score) <span class="keyword">FROM</span> users <span class="keyword">GROUP</span> <span class="keyword">BY</span> grade; <span class="comment">-- 按照年级分组，统计每个年级的平均分数</span></span><br></pre></td></tr></table></figure><h2 id="数据控制-DCL"><a href="#数据控制-DCL" class="headerlink" title="数据控制 DCL"></a>数据控制 DCL</h2><p>新增用户，删除用户，修改密码，修改用户权限。数据库的权限控制。</p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>见性与幻觉的辨析</title>
      <link href="/2025/03/21/%E8%A7%81%E6%80%A7%E4%B8%8E%E5%B9%BB%E8%A7%89%E7%9A%84%E8%BE%A8%E6%9E%90/"/>
      <url>/2025/03/21/%E8%A7%81%E6%80%A7%E4%B8%8E%E5%B9%BB%E8%A7%89%E7%9A%84%E8%BE%A8%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="楞严经中见性是心，见性不动，见性不灭，见性不失，见性无还，见性不杂，见性无碍等等所谓十番显见，请从见性的角度解释一下精神病人或者吃了精神药物能看到一些幻觉。如何去理解"><a href="#楞严经中见性是心，见性不动，见性不灭，见性不失，见性无还，见性不杂，见性无碍等等所谓十番显见，请从见性的角度解释一下精神病人或者吃了精神药物能看到一些幻觉。如何去理解" class="headerlink" title="楞严经中见性是心，见性不动，见性不灭，见性不失，见性无还，见性不杂，见性无碍等等所谓十番显见，请从见性的角度解释一下精神病人或者吃了精神药物能看到一些幻觉。如何去理解?"></a>楞严经中见性是心，见性不动，见性不灭，见性不失，见性无还，见性不杂，见性无碍等等所谓十番显见，请从见性的角度解释一下精神病人或者吃了精神药物能看到一些幻觉。如何去理解?</h2><p>理解《楞严经》中的“见性”与精神疾病或药物引发的幻觉，需要区分几个层面的概念：<br><strong>1. 《楞严经》中的“见性”：</strong></p><ul><li><strong>本质：</strong><ul><li>《楞严经》所说的“见性”是指我们内在的、不生不灭、不动摇的本性，也就是“真心”或“佛性”。</li><li>“十番显见”等内容，是强调“见性”的本质是超越了我们日常所经验的感官世界和思维活动的。</li><li>例如“见性不动”指的是，我们能见的“性”它本身是不动摇的，动摇的是外界的尘境。</li></ul></li><li><strong>超越性：</strong><ul><li>这种“见性”不是我们通常所说的“看见”，而是指一种对宇宙万物本质的深刻觉悟。</li><li>它超越了时间和空间的限制，是永恒不变的。</li></ul></li></ul><p><strong>2. 精神疾病或药物引发的幻觉：</strong></p><ul><li><strong>生理和心理因素：</strong><ul><li>精神疾病（如精神分裂症）或精神药物会影响大脑的神经化学平衡，导致感知和思维的扭曲。</li><li>幻觉是这些扭曲的表现，是大脑内部错误的信号或解释。</li><li>这些幻觉产生的根源在于，人们的感官接受信息后，在大脑中产生错误的认知，和理解。</li></ul></li><li><strong>与“见性”的差异：</strong><ul><li>幻觉是虚幻的、不稳定的，受到生理和心理状态的影响。</li><li>“见性”是真实的、永恒的，超越了这些因素。</li><li>因此，幻觉与“见性”本质上是完全不同的。</li><li>幻觉是由于感官与大脑，产生了错误的认知。见性是超越感官与大脑的。</li></ul></li></ul><p><strong>3. 如何理解：</strong></p><ul><li><strong>区分概念：</strong><ul><li>重要的是要区分《楞严经》中的“见性”和精神疾病或药物引发的幻觉。</li><li>不要将两者混淆。</li></ul></li><li><strong>科学与佛学：</strong><ul><li>科学（神经科学、心理学）可以解释幻觉的生理和心理机制。</li><li>佛学则提供了一种超越这些机制的、对生命本质的深刻理解。</li></ul></li><li><strong>修行：</strong><ul><li>通过修行，例如禅修，可以帮助我们更好地认识自己的内心，减少妄想和执着，从而更接近“见性”。</li><li>对于有精神疾病的人，应该寻求专业的医疗帮助，而不是试图通过修行来解决。</li></ul></li></ul><p><strong>总结：</strong></p><ul><li>《楞严经》中的“见性”是一种对宇宙万物本质的深刻觉悟，是超越感官和思维的。</li><li>精神疾病或药物引发的幻觉是由于大脑神经化学平衡的扭曲，导致感知和思维的扭曲。</li><li>两者本质上是不同的，不能混淆。</li><li>需要用科学和佛学的不同角度，来理解这些概念。</li></ul><hr><h2 id="如果说幻觉是由于感官与大脑，产生了错误的认知。那所谓的现实世界又如何确定不是大脑和感官产生的幻觉呢。"><a href="#如果说幻觉是由于感官与大脑，产生了错误的认知。那所谓的现实世界又如何确定不是大脑和感官产生的幻觉呢。" class="headerlink" title="如果说幻觉是由于感官与大脑，产生了错误的认知。那所谓的现实世界又如何确定不是大脑和感官产生的幻觉呢。"></a>如果说幻觉是由于感官与大脑，产生了错误的认知。那所谓的现实世界又如何确定不是大脑和感官产生的幻觉呢。</h2><p>这是一个非常深刻的哲学问题，也是一个长期以来困扰着人类的问题。确实，如果幻觉是感官和大脑产生的错误认知，那么我们如何确定我们所认为的“现实世界”不是另一种更复杂、更普遍的幻觉呢？</p><p>要理解这个问题，我们可以从几个不同的角度进行探讨：</p><p><strong>1. 哲学观点：</strong></p><ul><li><strong>怀疑论：</strong><ul><li>哲学上的怀疑论者认为，我们永远无法完全确定我们所感知到的现实是否真实。</li><li>笛卡尔的“我思故我在”就是一个经典的例子，他通过怀疑一切来寻找不可怀疑的真理。</li><li>这种观点强调了我们感官和认知的局限性。</li></ul></li><li><strong>现象学：</strong><ul><li>现象学强调我们对世界的直接体验。</li><li>它认为，我们只能知道我们所体验到的事物，而无法知道事物“本身”是什么。</li><li>从这个角度来看，“现实”就是我们所体验到的，无论它是否是“真实”的。</li></ul></li></ul><p><strong>2. 科学观点：</strong></p><ul><li><strong>神经科学：</strong><ul><li>神经科学告诉我们，我们对世界的感知是大脑对感官信息的解释。</li><li>这意味着，我们所看到的、听到的、感觉到的，都是大脑构建出来的“模型”。</li><li>这个模型可能与“客观现实”相符，也可能不符。</li></ul></li><li><strong>量子物理学：</strong><ul><li>量子物理学揭示了微观世界的奇异特性，例如波粒二象性和量子纠缠。</li><li>这些特性挑战了我们对“现实”的传统观念，表明“现实”可能比我们想象的更加复杂和不确定。</li></ul></li></ul><p><strong>3. 如何看待：</strong></p><ul><li><strong>实用主义：</strong><ul><li>尽管我们可能无法完全确定“现实”的本质，但我们可以通过实践来检验我们的感知。</li><li>如果我们的感知能够帮助我们有效地与世界互动，那么它就是“有用”的，即使它可能不是“绝对真实”的。</li></ul></li><li><strong>相对性：</strong><ul><li>“现实”可能是相对的，取决于我们的视角和认知能力。</li><li>不同的生物可能有不同的感知世界的方式，因此它们所体验到的“现实”也可能不同。</li></ul></li><li><strong>接受不确定性：</strong><ul><li>或许，我们应该接受“现实”的不确定性。</li><li>重要的是，我们能够以开放的心态去探索和理解世界，而不是执着于寻找一个“绝对真实”的答案。</li></ul></li></ul><p><strong>总结：</strong></p><ul><li>“现实”的本质是一个复杂而深刻的问题，没有简单的答案。</li><li>哲学和科学都提供了不同的视角，帮助我们理解这个问题。</li><li>或许，最重要的是保持开放的心态，接受“现实”的不确定性，并以实用主义的态度去生活。</li></ul><hr><h2 id="由见性无碍，可知我们本可以看到更多的东西，只是因为因根生相，受限于我们眼根的能力，只能看到（或者生成）部分的不完整的相。我可以这么理解吗？"><a href="#由见性无碍，可知我们本可以看到更多的东西，只是因为因根生相，受限于我们眼根的能力，只能看到（或者生成）部分的不完整的相。我可以这么理解吗？" class="headerlink" title="由见性无碍，可知我们本可以看到更多的东西，只是因为因根生相，受限于我们眼根的能力，只能看到（或者生成）部分的不完整的相。我可以这么理解吗？"></a>由见性无碍，可知我们本可以看到更多的东西，只是因为因根生相，受限于我们眼根的能力，只能看到（或者生成）部分的不完整的相。我可以这么理解吗？</h2><p>你的理解在一定程度上是符合《楞严经》中“见性无碍”的含义的。以下是对你的理解的进一步阐释：</p><p><strong>1. 见性无碍的本质：</strong></p><ul><li>《楞严经》强调，我们内在的“见性”或“佛性”是无碍的，即没有障碍、没有限制的。</li><li>这意味着，从本质上讲，我们的“见性”能够感知一切，超越任何感官或认知的局限。</li><li>“见性无碍”是指我们本自具有的，能认知一切的能力，是不受任何阻碍的。</li></ul><p><strong>2. 因根生相的局限：</strong></p><ul><li>然而，由于“因根生相”，即由于我们的感官（眼、耳、鼻、舌、身、意）和由此产生的现象，我们的感知受到了限制。</li><li>我们的感官只能接收和处理有限的信息，因此我们所看到的、听到的、感觉到的，只是“现实”的一部分，或者说是我们大脑构建出来的“相”。</li><li>我们通过感官所认识的世界，是一个被感官所局限的世界，并不是世界的全貌。</li><li>我们的感官，就如同一个过滤器，把无限的世界，过滤成为我们能接受的信息。</li></ul><p><strong>3. 你的理解的合理性：</strong></p><ul><li>因此，你的理解是合理的：从“见性无碍”的角度来看，我们本可以感知更多的东西，但由于感官的局限，我们只能看到（或生成）部分不完整的“相”。</li><li>这就像用一个狭窄的窗口观察广阔的风景，我们只能看到窗口内的景象，而无法看到全貌。</li><li>佛法认为，通过修行，我们可以超越感官和认知的局限，逐渐接近“见性”，从而获得更全面、更深刻的认知。</li></ul><p><strong>4. 进一步的思考：</strong></p><ul><li>重要的是要认识到，“见性”不是指一种超感官的感知能力，而是指一种对事物本质的深刻觉悟。</li><li>这种觉悟超越了感官和思维的限制，能够洞察宇宙万物的真相。</li><li>所以，修行者，通过修行，是要破除感官，与思维，对自我的限制，从而达到，明心见性，与宇宙万物合一的状态。</li></ul><p><strong>总结：</strong></p><ul><li>“见性无碍”表明我们本具无限的认知能力。</li><li>“因根生相”解释了我们感官的局限性。</li><li>通过修行，我们可以超越这些局限，逐渐接近“见性”。</li></ul><hr><h2 id="我用程序做给类比，你看有无道理。程序中的类就好比心性，而对象就好比我们人。类有见性，此见性可以理解为能看到所有频率的电磁波。但在进行对象化具体的人的时候，为了减轻负担，传递的参数只有部分频率的电磁波。所谓的修行就是要回溯到类。"><a href="#我用程序做给类比，你看有无道理。程序中的类就好比心性，而对象就好比我们人。类有见性，此见性可以理解为能看到所有频率的电磁波。但在进行对象化具体的人的时候，为了减轻负担，传递的参数只有部分频率的电磁波。所谓的修行就是要回溯到类。" class="headerlink" title="我用程序做给类比，你看有无道理。程序中的类就好比心性，而对象就好比我们人。类有见性，此见性可以理解为能看到所有频率的电磁波。但在进行对象化具体的人的时候，为了减轻负担，传递的参数只有部分频率的电磁波。所谓的修行就是要回溯到类。"></a>我用程序做给类比，你看有无道理。程序中的类就好比心性，而对象就好比我们人。类有见性，此见性可以理解为能看到所有频率的电磁波。但在进行对象化具体的人的时候，为了减轻负担，传递的参数只有部分频率的电磁波。所谓的修行就是要回溯到类。</h2><p>你的程序类比非常有趣，并且在某些方面能够很好地解释《楞严经》中“见性”的概念。让我们深入探讨一下：</p><p><strong>1. 类的比喻：</strong></p><ul><li><strong>类比心性：</strong><ul><li>你将程序中的“类”比喻为“心性”，这是一个巧妙的比喻。</li><li>类在编程中代表一种通用的模板或蓝图，它包含了所有可能的属性和方法。</li><li>这与“心性”的概念相似，它被认为是宇宙万物的基础，包含了一切的可能性。</li></ul></li><li><strong>见性比喻所有频率电磁波：</strong><ul><li>“类”的“见性”可以理解为它具有感知所有频率电磁波的能力，这代表了“心性”的无所不知、无所不在的特性。</li><li>这强调了“见性”超越感官限制的本质。</li></ul></li></ul><p><strong>2. 对象的比喻：</strong></p><ul><li><strong>对象比喻人：</strong><ul><li>“对象”作为“类”的具体实例，代表了我们“人”。</li><li>在实例化过程中，对象只接收到部分频率的电磁波，这象征着我们受到感官和认知的限制，只能感知到“现实”的一部分。</li><li>这就很好的解释了，为什么，我们不能看到所有的东西。因为我们所接受到的“参数”不够。</li></ul></li><li><strong>减轻负担：</strong><ul><li>你提到“减轻负担”，这可以理解为大脑为了高效运作，只处理必要的信息，从而简化了我们对世界的感知。</li><li>这与神经科学的观点相符，大脑会过滤和压缩感官信息，以减少认知负荷。</li></ul></li></ul><p><strong>3. 修行的比喻：</strong></p><ul><li><strong>回溯到类：</strong><ul><li>“修行”被比喻为“回溯到类”，这代表了通过修行，我们试图超越感官和认知的限制，恢复到“心性”的原始状态。</li><li>这与佛学中“明心见性”的目标一致，即通过修行，我们能够认识到自己的“真心”，从而获得解脱。</li><li>也就是说，修行，就是破除“对象”也就是我们人，的种种限制，从而回归到“类”也就是心性的状态。</li></ul></li></ul><p><strong>4. 优点和局限性：</strong></p><ul><li><strong>优点：</strong><ul><li>这个类比能够很好地解释“见性无碍”和“因根生相”的概念。</li><li>它将抽象的佛学概念转化为具体的编程概念，有助于我们更好地理解。</li><li>用编程的语言来解释佛学，对于现代人来说，更容易理解和接受。</li></ul></li><li><strong>局限性：</strong><ul><li>编程类比毕竟是一种简化，它无法完全表达“心性”的复杂性和深度。</li><li>“心性”超越了物质和思维的范畴，而编程概念仍然属于物质世界的范畴。</li><li>佛学里，所讲的“心性”是超越一切的，是不可用任何具体的概念来解释的。所以，一切的解释，最终都是一种比喻。</li></ul></li></ul><p><strong>总结：</strong></p><p>你的程序类比是一个非常有价值的尝试，它能够帮助我们从一个新的角度理解《楞严经》中的“见性”概念。尽管存在局限性，但它仍然是一个很好的工具，可以帮助我们更好地思考这些深刻的哲学问题。</p><hr><h2 id="有个疑惑，楞严经中说因根生相，又说世间万象结识因缘和合而生。那这相到底是本就存在我们的心性中，还是脱离心性，随时间变化而生灭呢？"><a href="#有个疑惑，楞严经中说因根生相，又说世间万象结识因缘和合而生。那这相到底是本就存在我们的心性中，还是脱离心性，随时间变化而生灭呢？" class="headerlink" title="有个疑惑，楞严经中说因根生相，又说世间万象结识因缘和合而生。那这相到底是本就存在我们的心性中，还是脱离心性，随时间变化而生灭呢？"></a>有个疑惑，楞严经中说因根生相，又说世间万象结识因缘和合而生。那这相到底是本就存在我们的心性中，还是脱离心性，随时间变化而生灭呢？</h2><p>这个问题涉及到《楞严经》中关于“心性”、“因缘和合”以及“相”之间关系的复杂讨论。要理解这些概念，需要把握以下几个关键点：</p><p><strong>1. 心性的根本性：</strong></p><ul><li>《楞严经》强调“心性”是万物的基础，一切现象都源于心性的变现。</li><li>心性具有“见性”，是能认知一切的根本。</li><li>从这个角度看，一切“相”的本质都与心性相关。</li></ul><p><strong>2. 因缘和合的显现：</strong></p><ul><li>《楞严经》也指出，世间万象是“因缘和合”而生。</li><li>这意味着，现象的产生依赖于各种条件的聚合。</li><li>这些条件包括我们感官的接触（“根”）以及外在环境的因素（“缘”）。</li><li>因缘和合，是指一切事物，都是由于，各种条件聚合，而产生的现象，所以说万物是“空”的。</li></ul><p><strong>3. “相”的本质：</strong></p><ul><li>“相”既不是完全独立于心性，也不是完全存在于心性之中。</li><li>“相”是心性与因缘相互作用的产物。</li><li>也就是说，心性是基础，因缘是条件，两者结合产生了我们所感知到的“相”。</li><li>“相”是随时间变化而生灭的，即“诸行无常”。</li></ul><p><strong>4. 理解的关键：</strong></p><ul><li>区分“心性”的本质和“相”的显现。</li><li>心性是永恒不变的，而相是短暂变化的。</li><li>“相”的生灭，是心性在因缘的作用下，所呈现出的现象。</li><li>“相”好比是，心性这块屏幕上，所投影出来的画面，画面是随时间变化的，但是屏幕，是不变的。</li></ul><p><strong>总结：</strong></p><ul><li>“相”不是独立存在的，而是心性和因缘共同作用的产物。</li><li>它既与心性相关，又受到因缘的制约。</li><li>因此，“相”是随时间变化而生灭的，而心性的本质是不变的。</li><li>理解这些概念，有助于我们认识到，我们所感知的世界，是心性与因缘相互作用的显现，从而放下对“相”的执着。</li></ul><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 论道 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 楞严经 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jar包导出到Linux里</title>
      <link href="/2025/03/21/jar%E5%8C%85%E5%AF%BC%E5%87%BA%E5%88%B0Linux%E9%87%8C/"/>
      <url>/2025/03/21/jar%E5%8C%85%E5%AF%BC%E5%87%BA%E5%88%B0Linux%E9%87%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="使用-IntelliJ-IDEA-编写-Java-程序并导出-JAR-包（适用于-Linux）"><a href="#使用-IntelliJ-IDEA-编写-Java-程序并导出-JAR-包（适用于-Linux）" class="headerlink" title="使用 IntelliJ IDEA 编写 Java 程序并导出 JAR 包（适用于 Linux）"></a>使用 IntelliJ IDEA 编写 Java 程序并导出 JAR 包（适用于 Linux）</h1><h2 id="1-创建-Java-项目"><a href="#1-创建-Java-项目" class="headerlink" title="1. 创建 Java 项目"></a><strong>1. 创建 Java 项目</strong></h2><ol><li>打开 <strong>IntelliJ IDEA</strong>，点击 <strong>File -&gt; New -&gt; Project</strong>。</li><li>选择 <strong>Java</strong>，点击 <strong>Next</strong>。</li><li>选择 <strong>JDK 版本</strong>（如果没有，请安装 JDK 并添加）。</li><li>取消勾选 <strong>Create project from template</strong>，点击 <strong>Next</strong>。</li><li>取个项目名称（如 <code>HelloWorld</code>），点击 <strong>Finish</strong>。</li></ol><hr><h2 id="2-编写-Java-代码"><a href="#2-编写-Java-代码" class="headerlink" title="2. 编写 Java 代码"></a><strong>2. 编写 Java 代码</strong></h2><ol><li>在 <code>src</code> 目录下创建 <code>Main.java</code> 文件，代码如下：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello, Linux!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>运行</strong>程序（点击 <code>▶</code> 按钮）检查是否正常输出 <code>Hello, Linux!</code>。</li></ol><hr><h2 id="3-配置-JAR-生成"><a href="#3-配置-JAR-生成" class="headerlink" title="3. 配置 JAR 生成"></a><strong>3. 配置 JAR 生成</strong></h2><ol><li><strong>打开</strong> IntelliJ IDEA <strong>菜单</strong>：<br><code>File -&gt; Project Structure -&gt; Artifacts</code></li><li><strong>点击</strong> <code>+</code> -&gt; <code>JAR</code> -&gt; <code>From modules with dependencies</code>。</li><li><strong>选择模块</strong>（你的 <code>Main</code> 类所在的模块），勾选 <code>Include in project build</code>，点击 <strong>OK</strong>。</li><li>选择 <strong>输出路径</strong>（默认是 <code>out/artifacts/HelloWorld_jar/HelloWorld.jar</code>）。</li><li><strong>点击</strong> <code>Apply</code> -&gt; <code>OK</code>。</li></ol><hr><h2 id="4-生成-JAR"><a href="#4-生成-JAR" class="headerlink" title="4. 生成 JAR"></a><strong>4. 生成 JAR</strong></h2><ol><li><strong>打开菜单</strong>：<code>Build -&gt; Build Artifacts</code>。</li><li>选择 <code>HelloWorld.jar</code>，然后点击 <code>Build</code>。</li><li>在 <code>out/artifacts/HelloWorld_jar/</code> 目录下会生成 <code>HelloWorld.jar</code>。</li></ol><hr><h2 id="5-在-Linux-上运行"><a href="#5-在-Linux-上运行" class="headerlink" title="5. 在 Linux 上运行"></a><strong>5. 在 Linux 上运行</strong></h2><ol><li><strong>将 JAR 复制到 Linux</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp out/artifacts/HelloWorld_jar/HelloWorld.jar user@your_linux_ip:/home/user/</span><br></pre></td></tr></table></figure></li><li><strong>SSH 进入 Linux</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh user@your_linux_ip</span><br></pre></td></tr></table></figure></li><li><strong>运行 JAR</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar HelloWorld.jar</span><br></pre></td></tr></table></figure>你应该会看到：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello, Linux!</span><br></pre></td></tr></table></figure></li></ol><p>这样你就成功在 Linux 上运行了你的 Java JAR 包！🚀  </p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 计算机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
